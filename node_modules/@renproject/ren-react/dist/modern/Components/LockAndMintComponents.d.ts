import * as React from "react";
import { AcceptedGatewayTransaction, CompletedGatewayTransaction, ConfirmingGatewayTransaction, ErroringGatewaySession, GatewaySession, GatewayTransaction, OpenedGatewaySession, SubmittingGatewayTransaction } from "@renproject/ren-tx";
import { MintConfigMultiple, MintConfigSingle, useLockAndMint } from "../useLockAndMint";
export interface ConfirmingDepositProps<X> {
    deposit: ConfirmingGatewayTransaction<X>;
    confirmations: number;
    targetConfirmations?: number;
}
interface SigningDepositProps {
    deposit: ConfirmingGatewayTransaction<any>;
}
interface SubmittingMintDepositProps {
    deposit: SubmittingGatewayTransaction<any>;
}
interface MintingDepositProps {
    deposit: SubmittingGatewayTransaction<any>;
}
interface AcceptedDepositProps {
    deposit: AcceptedGatewayTransaction<any>;
    mint: (params?: any) => void;
    amount: number;
}
interface CompletedDepositProps {
    deposit: CompletedGatewayTransaction<any>;
    amount: number;
    tx: string;
}
interface LoadingDepositProps {
    deposit: GatewayTransaction<any>;
}
interface RejectedDepositProps {
    deposit: GatewayTransaction<any>;
    reason: string;
}
interface ErrorRestoringDepositProps {
    deposit: GatewayTransaction<any>;
    reason: string;
}
interface ErrorMintingDepositProps {
    deposit: GatewayTransaction<any>;
    retry: (params?: any) => void;
    reason: string;
}
interface ErrorSigningDepositProps {
    deposit: GatewayTransaction<any>;
    reason: string;
}
export interface DepositProps {
    session: ReturnType<typeof useLockAndMint>;
    depositId: string;
    currency: string;
    ConfirmingDeposit?: React.FC<ConfirmingDepositProps<any>>;
    SigningDeposit?: React.FC<SigningDepositProps>;
    AcceptedDeposit?: React.FC<AcceptedDepositProps>;
    SubmittingMintDeposit?: React.FC<SubmittingMintDepositProps>;
    MintingDeposit?: React.FC<MintingDepositProps>;
    CompletedDeposit?: React.FC<CompletedDepositProps>;
    LoadingDeposit?: React.FC<LoadingDepositProps>;
    RejectedDeposit?: React.FC<RejectedDepositProps>;
    ErrorMintingDeposit?: React.FC<ErrorMintingDepositProps>;
    ErrorRestoringDeposit?: React.FC<ErrorRestoringDepositProps>;
    ErrorSigningDeposit?: React.FC<ErrorSigningDepositProps>;
}
declare const DefaultDeposit: React.FC<DepositProps>;
interface BasicMintProps {
    parameters: MintConfigSingle | MintConfigMultiple;
    GatewayInfo?: typeof DefaultGatewayInfo;
    GatewayOpening?: typeof DefaultGatewayOpening;
    Deposit?: typeof DefaultDeposit;
    GatewayError?: typeof DefaultGatewayError;
}
interface GatewayOpeningProps {
    session: GatewaySession<any>;
}
declare const DefaultGatewayOpening: React.FC<GatewayOpeningProps>;
interface GatewayInfoProps {
    session: OpenedGatewaySession<any>;
}
declare const DefaultGatewayInfo: React.FC<GatewayInfoProps>;
interface GatewayErrorProps {
    session: ErroringGatewaySession<any>;
    reason: Error;
}
declare const DefaultGatewayError: React.FC<GatewayErrorProps>;
export declare const BasicMint: React.FC<BasicMintProps>;
export {};
