{"ast":null,"code":"import _objectSpread from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar overrideContractCall = function overrideContractCall(contractCall, override) {\n  var overrideParams = (override.contractParams || []).reduce(function (acc, param) {\n    if (param.name) {\n      acc[param.name] = param;\n    }\n\n    return acc;\n  }, {});\n  var txConfig;\n\n  if (typeof contractCall.txConfig === \"object\" && typeof override.txConfig === \"object\") {\n    txConfig = _objectSpread({}, contractCall.txConfig, override.txConfig);\n  } else {\n    txConfig = override.txConfig || contractCall.txConfig;\n  }\n\n  return _objectSpread({}, contractCall, override, {\n    // Clone txConfig\n    txConfig: txConfig,\n    // Clone contractParams\n    contractParams: (contractCall.contractParams || []).map(function (contractParam) {\n      return _objectSpread({}, contractParam, overrideParams[contractParam.name]);\n    })\n  });\n};\n\nexport var overrideContractCalls = function overrideContractCalls(contractCalls, override) {\n  if (Array.isArray(override) && override.length !== contractCalls.length) {\n    throw new Error(\"Contract call override must be same length as contract calls array.\");\n  }\n\n  return contractCalls.map(function (contractCall, i) {\n    var contractCallOverride = Array.isArray(override) ? // If override is an array, there should be an array for each call.\n    override[i] : // If there's only one override, apply it to the last contract call.\n    i === contractCalls.length - 1 ? override : // Default to empty object.\n    {};\n    return overrideContractCall(contractCall, contractCallOverride);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}