{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { LogLevel, NullLogger } from \"@renproject/interfaces\";\nimport { extractError, retryNTimes, SECONDS } from \"@renproject/utils\";\nimport axios from \"axios\";\n\nvar generatePayload = function generatePayload(method, params) {\n  return {\n    id: 1,\n    jsonrpc: \"2.0\",\n    method: method,\n    params: params\n  };\n};\n\nexport var HttpProvider = function HttpProvider(ipOrMultiaddress) {\n  var _this = this;\n\n  var logger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NullLogger;\n\n  _classCallCheck(this, HttpProvider);\n\n  this.sendMessage =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(method, request) {\n      var retry,\n          timeout,\n          payload,\n          response,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              retry = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 2;\n              timeout = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : 120 * SECONDS;\n              payload = generatePayload(method, request);\n\n              if ( // Check level before doing expensive JSON call.\n              typeof _this.logger.level !== \"number\" || _this.logger.level >= LogLevel.Debug) {\n                _this.logger.debug(\"[request]\", JSON.stringify(payload, null, \"    \"));\n              }\n\n              _context2.prev = 4;\n              _context2.next = 7;\n              return retryNTimes(\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", axios.post(_this.nodeURL, payload, // Use a 120 second timeout. This could be reduced, but\n                        // should be done based on the method, since some requests\n                        // may take a long time, especially on a slow connection.\n                        {\n                          timeout: timeout\n                        }));\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })), retry, 1 * SECONDS);\n\n            case 7:\n              response = _context2.sent;\n\n              if (!(response.status !== 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              throw _this.responseError(\"Unexpected status code \".concat(String(response.status), \" returned from node.\"), response);\n\n            case 10:\n              if (!response.data.error) {\n                _context2.next = 12;\n                break;\n              }\n\n              throw new Error(response.data.error);\n\n            case 12:\n              if (!(response.data.result === undefined)) {\n                _context2.next = 14;\n                break;\n              }\n\n              throw new Error(\"Empty result returned from node.\");\n\n            case 14:\n              if (typeof _this.logger.level !== \"number\" || _this.logger.level >= LogLevel.Debug) {\n                _this.logger.debug(\"[response]\", JSON.stringify(response.data.result, null, \"    \"));\n              }\n\n              return _context2.abrupt(\"return\", response.data.result);\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](4);\n\n              if (_context2.t0.response) {\n                _context2.t0.message = \"Node returned status \".concat(String(_context2.t0.response.status), \" with reason: \").concat(extractError(_context2.t0));\n              }\n\n              throw _context2.t0;\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 18]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.responseError = function (msg, response) {\n    var error = new Error(msg);\n    error.response = response;\n    return error;\n  };\n\n  this.logger = logger;\n\n  if (typeof ipOrMultiaddress !== \"string\") {\n    throw new Error(\"Invalid node URL \".concat(String(ipOrMultiaddress)));\n  }\n\n  if (ipOrMultiaddress.indexOf(\"://\") === -1) {\n    throw new Error(\"Invalid node URL without protocol: \".concat(ipOrMultiaddress, \".\"));\n  }\n\n  this.nodeURL = ipOrMultiaddress;\n};","map":null,"metadata":{},"sourceType":"module"}