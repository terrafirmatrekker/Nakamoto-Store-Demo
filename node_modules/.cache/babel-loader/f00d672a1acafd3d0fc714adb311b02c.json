{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUTXO = exports.getConfirmations = exports.getUTXOs = exports.BCHHandler = exports._apiFallbacks = void 0;\n\nvar bitcoin = __importStar(require(\"bitgo-utxo-lib\"));\n\nvar bchaddrjs_1 = require(\"bchaddrjs\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar immutable_1 = require(\"immutable\");\n\nvar bitcoinDotCom_1 = require(\"../../common/apis/bitcoinDotCom\");\n\nvar blockchair_1 = require(\"../../common/apis/blockchair\");\n\nvar bitgoUtxoLib_1 = require(\"../../common/libraries/bitgoUtxoLib\");\n\nvar confirmations_1 = require(\"../../lib/confirmations\");\n\nvar promiEvent_1 = require(\"../../lib/promiEvent\");\n\nvar retry_1 = require(\"../../lib/retry\");\n\nvar toCashAddr = function toCashAddr(legacyAddress) {\n  try {\n    return bchaddrjs_1.toCashAddress(legacyAddress);\n  } catch (error) {\n    return legacyAddress;\n  }\n};\n\nexports._apiFallbacks = {\n  fetchConfirmations: function fetchConfirmations(testnet, txHash) {\n    return [function () {\n      return bitcoinDotCom_1.BitcoinDotCom.fetchConfirmations(testnet)(txHash);\n    }, testnet ? undefined : function () {\n      return blockchair_1.Blockchair.fetchConfirmations(blockchair_1.Blockchair.networks.BITCOIN_CASH)(txHash);\n    }];\n  },\n  fetchUTXO: function fetchUTXO(testnet, txHash, vOut) {\n    return [function () {\n      return bitcoinDotCom_1.BitcoinDotCom.fetchUTXO(testnet)(txHash, vOut);\n    }, testnet ? undefined : function () {\n      return blockchair_1.Blockchair.fetchUTXO(blockchair_1.Blockchair.networks.BITCOIN_CASH)(txHash, vOut);\n    }];\n  },\n  fetchUTXOs: function fetchUTXOs(testnet, address, confirmations) {\n    return [function () {\n      return bitcoinDotCom_1.BitcoinDotCom.fetchUTXOs(testnet)(address, confirmations);\n    }, testnet ? undefined : function () {\n      return blockchair_1.Blockchair.fetchUTXOs(blockchair_1.Blockchair.networks.BITCOIN_CASH)(address, confirmations);\n    }];\n  },\n  broadcastTransaction: function broadcastTransaction(testnet, hex) {\n    return [function () {\n      return bitcoinDotCom_1.BitcoinDotCom.broadcastTransaction(testnet)(hex);\n    }, testnet ? undefined : function () {\n      return blockchair_1.Blockchair.broadcastTransaction(blockchair_1.Blockchair.networks.BITCOIN_CASH)(hex);\n    }];\n  }\n};\n\nvar BCHHandler = function BCHHandler(privateKey, network) {\n  var _this = this;\n\n  _classCallCheck(this, BCHHandler);\n\n  this.decimals = 8; // Returns whether or not this can handle the asset\n\n  this.handlesAsset = function (asset) {\n    return typeof asset === \"string\" && [\"BCH\", \"BITCOIN CASH\", \"BCASH\", \"BITCOINCASH\", \"BITCOIN-CASH\"].indexOf(asset.toUpperCase()) !== -1;\n  };\n\n  this.address =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(asset, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", toCashAddr(_this.privateKey.getAddress()));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Balance\n\n\n  this.getBalance =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(asset, options) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.getBalanceInSats(asset, options);\n\n            case 2:\n              _context2.t0 = new bignumber_js_1.default(10).exponentiatedBy(_this.decimals);\n              return _context2.abrupt(\"return\", _context2.sent.dividedBy(_context2.t0));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.getBalanceInSats =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(asset, options) {\n      var utxos;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = exports;\n              _context3.t1 = _this.testnet;\n              _context3.t2 = Object;\n              _context3.t3 = Object.assign({}, options);\n              _context3.t4 = options && options.address;\n\n              if (_context3.t4) {\n                _context3.next = 9;\n                break;\n              }\n\n              _context3.next = 8;\n              return _this.address(asset);\n\n            case 8:\n              _context3.t4 = _context3.sent;\n\n            case 9:\n              _context3.t5 = _context3.t4;\n              _context3.t6 = {\n                address: _context3.t5\n              };\n              _context3.t7 = _context3.t2.assign.call(_context3.t2, _context3.t3, _context3.t6);\n              _context3.next = 14;\n              return _context3.t0.getUTXOs.call(_context3.t0, _context3.t1, _context3.t7);\n\n            case 14:\n              utxos = _context3.sent;\n              return _context3.abrupt(\"return\", utxos.reduce(function (sum, utxo) {\n                return sum.plus(utxo.amount);\n              }, new bignumber_js_1.default(0)));\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Transfer\n\n\n  this.send = function (to, value, asset, options) {\n    return _this.sendSats(to, value.times(new bignumber_js_1.default(10).exponentiatedBy(_this.decimals)), asset, options);\n  };\n\n  this.sendSats = function (to, valueIn, asset, options) {\n    var promiEvent = promiEvent_1.newPromiEvent();\n    var txHash;\n    var errored;\n\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var fromAddress, toAddress, changeAddress, utxos, built;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.t0 = bchaddrjs_1;\n              _context4.next = 3;\n              return _this.address(asset);\n\n            case 3:\n              _context4.t1 = _context4.sent;\n              fromAddress = _context4.t0.toLegacyAddress.call(_context4.t0, _context4.t1);\n              toAddress = bchaddrjs_1.toLegacyAddress(to);\n              changeAddress = fromAddress;\n              _context4.t2 = immutable_1;\n              _context4.next = 10;\n              return exports.getUTXOs(_this.testnet, Object.assign(Object.assign({}, options), {\n                address: fromAddress\n              }));\n\n            case 10:\n              _context4.t3 = _context4.sent;\n\n              _context4.t4 = function (utxo) {\n                return utxo.amount;\n              };\n\n              utxos = _context4.t2.List.call(_context4.t2, _context4.t3).sortBy(_context4.t4).reverse().toArray();\n              _context4.next = 15;\n              return bitgoUtxoLib_1.BitgoUTXOLib.buildUTXO(_this._bitgoNetwork(), _this.privateKey, changeAddress, toAddress, valueIn, utxos, Object.assign(Object.assign({}, options), {\n                signFlag: // tslint:disable-next-line: no-bitwise\n                bitcoin.Transaction.SIGHASH_SINGLE | bitcoin.Transaction.SIGHASH_BITCOINCASHBIP143\n              }));\n\n            case 15:\n              built = _context4.sent;\n              _context4.next = 18;\n              return retry_1.retryNTimes(function () {\n                return retry_1.fallback(exports._apiFallbacks.broadcastTransaction(_this.testnet, built.toHex()));\n              }, 3);\n\n            case 18:\n              txHash = _context4.sent;\n              promiEvent.emit(\"transactionHash\", txHash);\n              promiEvent.resolve(txHash);\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))().catch(function (error) {\n      errored = true;\n      promiEvent.reject(error);\n    });\n\n    confirmations_1.subscribeToConfirmations(promiEvent, function () {\n      return errored;\n    },\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", txHash ? _this._getConfirmations(txHash) : 0);\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n    return promiEvent;\n  };\n\n  this._getConfirmations = function (txHash) {\n    return retry_1.retryNTimes(function () {\n      return retry_1.fallback(exports._apiFallbacks.fetchConfirmations(_this.testnet, txHash));\n    }, 2);\n  };\n\n  this._bitgoNetwork = function () {\n    return _this.testnet ? bitcoin.networks.bitcoincashTestnet : bitcoin.networks.bitcoincash;\n  };\n\n  this.testnet = network !== \"mainnet\";\n  this.privateKey = bitgoUtxoLib_1.BitgoUTXOLib.loadPrivateKey(this._bitgoNetwork(), privateKey);\n};\n\nexports.BCHHandler = BCHHandler;\n\nexports.getUTXOs =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(testnet, options) {\n    var address, confirmations, endpoints, utxos;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            address = toCashAddr(options.address);\n            confirmations = options.confirmations || 0;\n            endpoints = exports._apiFallbacks.fetchUTXOs(testnet, address, confirmations);\n            _context6.next = 5;\n            return retry_1.retryNTimes(function () {\n              return retry_1.fallback(endpoints);\n            }, 2);\n\n          case 5:\n            utxos = _context6.sent;\n            return _context6.abrupt(\"return\", utxos);\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.getConfirmations =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(testnet, txHash) {\n    var endpoints;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            endpoints = exports._apiFallbacks.fetchConfirmations(testnet, txHash);\n            return _context7.abrupt(\"return\", retry_1.retryNTimes(function () {\n              return retry_1.fallback(endpoints);\n            }, 2));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports.getUTXO =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(testnet, txHash, vOut) {\n    var endpoints;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            endpoints = exports._apiFallbacks.fetchUTXO(testnet, txHash, vOut);\n            return _context8.abrupt(\"return\", retry_1.retryNTimes(function () {\n              return retry_1.fallback(endpoints);\n            }, 2));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x11, _x12, _x13) {\n    return _ref8.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}