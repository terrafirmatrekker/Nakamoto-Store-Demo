{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sochain = void 0;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar utxo_1 = require(\"../../lib/utxo\");\n\nvar timeout_1 = require(\"./timeout\");\n\nvar fetchUTXOs = function fetchUTXOs(network) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(address, confirmations) {\n        var url, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"https://sochain.com/api/v2/get_tx_unspent/\".concat(network, \"/\").concat(address, \"/\").concat(confirmations);\n                _context.next = 3;\n                return axios_1.default.get(url, {\n                  timeout: timeout_1.DEFAULT_TIMEOUT\n                });\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", utxo_1.fixUTXOs(response.data.data.txs.map(function (utxo) {\n                  return {\n                    txHash: utxo.txid,\n                    amount: utxo.value,\n                    // scriptPubKey: utxo.script_hex,\n                    vOut: utxo.output_no,\n                    confirmations: utxo.confirmations\n                  };\n                }), 8).filter(function (utxo) {\n                  return confirmations === 0 || utxo.confirmations >= confirmations;\n                }).sort(utxo_1.sortUTXOs));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar broadcastTransaction = function broadcastTransaction(network) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(txHex) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios_1.default.post(\"https://chain.so/send_tx/\".concat(network), {\n                  tx_hex: txHex\n                }, {\n                  timeout: timeout_1.DEFAULT_TIMEOUT\n                });\n\n              case 2:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data.data.txid);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexports.Sochain = {\n  fetchUTXOs: fetchUTXOs,\n  broadcastTransaction: broadcastTransaction\n};","map":null,"metadata":{},"sourceType":"script"}