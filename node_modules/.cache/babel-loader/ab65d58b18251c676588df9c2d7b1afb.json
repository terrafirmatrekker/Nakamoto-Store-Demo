{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retryNTimes = exports.fallback = exports.extractError = exports.sleep = void 0;\n\nexports.sleep = function (ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nexports.extractError = function (error) {\n  if (typeof error === \"object\") {\n    if (error.response && error.response.request && error.response.request.statusText) {\n      return exports.extractError(error.response.request.statusText);\n    }\n\n    if (error.response) {\n      return exports.extractError(error.response);\n    }\n\n    if (error.error) {\n      return exports.extractError(error.error);\n    }\n\n    if (error.message) {\n      return exports.extractError(error.message);\n    }\n\n    if (error.data) {\n      return exports.extractError(error.data);\n    }\n\n    if (error.statusText) {\n      return exports.extractError(error.statusText);\n    }\n\n    try {\n      return JSON.stringify(error);\n    } catch (error) {// Ignore JSON error\n    }\n  }\n\n  return String(error);\n};\n\nexports.fallback =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(fallbacks) {\n    var firstError, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, fn;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context.prev = 3;\n            _iterator = fallbacks[Symbol.iterator]();\n\n          case 5:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              _context.next = 21;\n              break;\n            }\n\n            fn = _step.value;\n\n            if (fn) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 18);\n\n          case 9:\n            _context.prev = 9;\n            _context.next = 12;\n            return fn();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](9);\n            firstError = firstError || _context.t0;\n\n          case 18:\n            _iteratorNormalCompletion = true;\n            _context.next = 5;\n            break;\n\n          case 21:\n            _context.next = 27;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t1 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t1;\n\n          case 27:\n            _context.prev = 27;\n            _context.prev = 28;\n\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n\n          case 30:\n            _context.prev = 30;\n\n            if (!_didIteratorError) {\n              _context.next = 33;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 33:\n            return _context.finish(30);\n\n          case 34:\n            return _context.finish(27);\n\n          case 35:\n            throw firstError || new Error(\"No result returned\");\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 23, 27, 35], [9, 15], [28,, 30, 34]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.retryNTimes =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(fnCall, retries) {\n    var returnError, i, errorMessage;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            i = 0;\n\n          case 1:\n            if (!(i < retries)) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.prev = 2;\n            _context2.next = 5;\n            return fnCall();\n\n          case 5:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](2);\n\n            if (!String(_context2.t0).match(/timeout of .* exceeded/)) {\n              _context2.next = 14;\n              break;\n            }\n\n            returnError = _context2.t0;\n            _context2.next = 17;\n            break;\n\n          case 14:\n            errorMessage = exports.extractError(_context2.t0);\n\n            if (errorMessage) {\n              // tslint:disable-next-line: no-object-mutation\n              _context2.t0.message += \" (\".concat(errorMessage, \")\");\n            }\n\n            throw _context2.t0;\n\n          case 17:\n            _context2.next = 19;\n            return exports.sleep(500);\n\n          case 19:\n            i++;\n            _context2.next = 1;\n            break;\n\n          case 22:\n            throw returnError;\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 8]]);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}