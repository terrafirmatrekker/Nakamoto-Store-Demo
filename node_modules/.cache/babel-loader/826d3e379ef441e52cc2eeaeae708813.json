{"ast":null,"code":"import _defineProperty from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _TxStatusIndex;\n\nexport var LockAndMintStatus;\n\n(function (LockAndMintStatus) {\n  LockAndMintStatus[\"Committed\"] = \"mint_committed\";\n  LockAndMintStatus[\"Deposited\"] = \"mint_deposited\";\n  LockAndMintStatus[\"Confirmed\"] = \"mint_confirmed\";\n  LockAndMintStatus[\"SubmittedToRenVM\"] = \"mint_submittedToRenVM\";\n  LockAndMintStatus[\"ReturnedFromRenVM\"] = \"mint_returnedFromRenVM\";\n  LockAndMintStatus[\"SubmittedToLockChain\"] = \"mint_submittedToLockChain\";\n  LockAndMintStatus[\"ConfirmedOnLockChain\"] = \"mint_confirmedOnLockChain\"; // Backwards compatibility\n\n  LockAndMintStatus[\"SubmittedToEthereum\"] = \"mint_submittedToEthereum\";\n  LockAndMintStatus[\"ConfirmedOnEthereum\"] = \"mint_confirmedOnEthereum\";\n})(LockAndMintStatus || (LockAndMintStatus = {}));\n\nexport var BurnAndReleaseStatus;\n\n(function (BurnAndReleaseStatus) {\n  BurnAndReleaseStatus[\"Committed\"] = \"burn_committed\";\n  BurnAndReleaseStatus[\"SubmittedToLockChain\"] = \"burn_submittedToLockChain\";\n  BurnAndReleaseStatus[\"ConfirmedOnLockChain\"] = \"burn_confirmedOnLockChain\";\n  BurnAndReleaseStatus[\"SubmittedToRenVM\"] = \"burn_submittedToRenVM\";\n  BurnAndReleaseStatus[\"ReturnedFromRenVM\"] = \"burn_returnedFromRenVM\";\n  BurnAndReleaseStatus[\"NoBurnFound\"] = \"burn_noBurnFound\"; // Backwards compatibility\n\n  BurnAndReleaseStatus[\"SubmittedToEthereum\"] = \"burn_submittedToEthereum\";\n  BurnAndReleaseStatus[\"ConfirmedOnEthereum\"] = \"burn_confirmedOnEthereum\";\n})(BurnAndReleaseStatus || (BurnAndReleaseStatus = {}));\n\nexport var TxStatus;\n\n(function (TxStatus) {\n  // TxStatusNil is used for transactions that have not been seen, or are\n  // otherwise unknown.\n  TxStatus[\"TxStatusNil\"] = \"nil\"; // TxStatusConfirming is used for transactions that are currently waiting\n  // for their underlying blockchain transactions to be confirmed.\n\n  TxStatus[\"TxStatusConfirming\"] = \"confirming\"; // TxStatusPending is used for transactions that are waiting for consensus\n  // to be reached on when the transaction should be executed.\n\n  TxStatus[\"TxStatusPending\"] = \"pending\"; // TxStatusExecuting is used for transactions that are currently being\n  // executed.\n\n  TxStatus[\"TxStatusExecuting\"] = \"executing\"; // TxStatusReverted is used for transactions that were reverted during\n  // execution.\n\n  TxStatus[\"TxStatusReverted\"] = \"reverted\"; // TxStatusDone is used for transactions that have been successfully\n  // executed.\n\n  TxStatus[\"TxStatusDone\"] = \"done\";\n})(TxStatus || (TxStatus = {}));\n\nexport var TxStatusIndex = (_TxStatusIndex = {}, _defineProperty(_TxStatusIndex, TxStatus.TxStatusNil, 0), _defineProperty(_TxStatusIndex, TxStatus.TxStatusConfirming, 1), _defineProperty(_TxStatusIndex, TxStatus.TxStatusPending, 2), _defineProperty(_TxStatusIndex, TxStatus.TxStatusExecuting, 3), _defineProperty(_TxStatusIndex, TxStatus.TxStatusReverted, 4), _defineProperty(_TxStatusIndex, TxStatus.TxStatusDone, 5), _TxStatusIndex);","map":null,"metadata":{},"sourceType":"module"}