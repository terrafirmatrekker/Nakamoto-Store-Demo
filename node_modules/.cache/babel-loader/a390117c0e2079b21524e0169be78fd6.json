{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar BN = require('../crypto/bn');\n\nvar buffer = require('buffer');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js'); // Sapling note magic values, copied from src/zcash/Zcash.h\n\n\nvar NOTEENCRYPTION_AUTH_BYTES = 16;\nvar ZC_NOTEPLAINTEXT_LEADING = 1;\nvar ZC_V_SIZE = 8;\nvar ZC_RHO_SIZE = 32;\nvar ZC_R_SIZE = 32;\nvar ZC_MEMO_SIZE = 512;\nvar ZC_DIVERSIFIER_SIZE = 11;\nvar ZC_JUBJUB_POINT_SIZE = 32;\nvar ZC_JUBJUB_SCALAR_SIZE = 32;\nvar ZC_NOTEPLAINTEXT_SIZE = ZC_NOTEPLAINTEXT_LEADING + ZC_V_SIZE + ZC_RHO_SIZE + ZC_R_SIZE + ZC_MEMO_SIZE;\nvar ZC_SAPLING_ENCPLAINTEXT_SIZE = ZC_NOTEPLAINTEXT_LEADING + ZC_DIVERSIFIER_SIZE + ZC_V_SIZE + ZC_R_SIZE + ZC_MEMO_SIZE;\nvar ZC_SAPLING_OUTPLAINTEXT_SIZE = ZC_JUBJUB_POINT_SIZE + ZC_JUBJUB_SCALAR_SIZE;\nvar ZC_SAPLING_ENCCIPHERTEXT_SIZE = ZC_SAPLING_ENCPLAINTEXT_SIZE + NOTEENCRYPTION_AUTH_BYTES;\nvar ZC_SAPLING_OUTCIPHERTEXT_SIZE = ZC_SAPLING_OUTPLAINTEXT_SIZE + NOTEENCRYPTION_AUTH_BYTES;\n\nfunction OutputDescription(params) {\n  if (!(this instanceof OutputDescription)) {\n    return new OutputDescription(params);\n  }\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nOutputDescription.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var outputdesc = new OutputDescription();\n  return outputdesc._fromObject(obj);\n};\n\nOutputDescription.prototype._fromObject = function (params) {\n  // TODO: Populate from parameters, but for now it's ok to do nothing.\n  return this;\n};\n\nOutputDescription.prototype.toObject = OutputDescription.prototype.toJSON = function toObject() {\n  // TODO: Populate JSON object, but for now it's ok to return a placeholder.\n  var obj = {};\n  return obj;\n};\n\nOutputDescription.fromBufferReader = function (br) {\n  var obj = new OutputDescription();\n  obj.cv = br.read(32);\n  obj.cmu = br.read(32);\n  obj.ephemeralKey = br.read(32);\n  obj.encCipherText = br.read(ZC_SAPLING_ENCCIPHERTEXT_SIZE);\n  obj.outCipherText = br.read(ZC_SAPLING_OUTCIPHERTEXT_SIZE);\n  obj.proof = br.read(48 + 96 + 48);\n  return obj;\n};\n\nOutputDescription.prototype.toBufferWriter = function (writer) {\n  var i;\n\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.write(this.cv);\n  writer.write(this.cmu);\n  writer.write(this.ephemeralKey);\n  writer.write(this.encCipherText);\n  writer.write(this.outCipherText);\n  writer.write(this.proof);\n  return writer;\n};\n\nmodule.exports = OutputDescription;","map":null,"metadata":{},"sourceType":"script"}