{"ast":null,"code":"import _objectSpread from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tejas/Desktop/marketplace/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\"; //Need to correct RenJS tutorial BTC/ETH imports with newest NPM file hypehn\n\nimport RenJS from \"@renproject/ren\";\nimport { Bitcoin } from \"@renproject/chains-bitcoin\";\nimport { Ethereum } from \"@renproject/chains-ethereum\";\nimport logo from \"../logo.png\";\nimport \"./App.css\";\nimport Marketplace from \"../abis/Marketplace.json\";\nimport ABI from \"../abis/ABI.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\"; // class dapp extends React.Component {\n//   render() {\n//     return  (\n//       <div className=\"bridge\">test\n//       <Renapp /></div>\n//     )\n//   }\n// }\n\nvar Store =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Store, _Component);\n\n  _createClass(Store, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, marketplace, productCount, i, product;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Marketplace.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                marketplace = web3.eth.Contract(Marketplace.abi, networkData.address);\n                this.setState({\n                  marketplace: marketplace\n                });\n                _context3.next = 14;\n                return marketplace.methods.productCount().call();\n\n              case 14:\n                productCount = _context3.sent;\n                this.setState({\n                  productCount: productCount\n                }); // Load products\n\n                i = 1;\n\n              case 17:\n                if (!(i <= productCount)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return marketplace.methods.products(i).call();\n\n              case 20:\n                product = _context3.sent;\n                this.setState({\n                  products: [].concat(_toConsumableArray(this.state.products), [product])\n                });\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                this.setState({\n                  loading: false\n                });\n                _context3.next = 29;\n                break;\n\n              case 28:\n                window.alert(\"Marketplace contract not deployed to detected network.\");\n\n              case 29:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function Store(props) {\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Store).call(this, props));\n    _this.state = {\n      account: \"\",\n      productCount: 0,\n      products: [],\n      loading: true\n    };\n    _this.createProduct = _this.createProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.purchaseProduct = _this.purchaseProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"createProduct\",\n    value: function createProduct(name, price) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.marketplace.methods.createProduct(name, price).send({\n        from: this.state.account\n      }).once(\"receipt\", function (receipt) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"purchaseProduct\",\n    value: function purchaseProduct(id, price) {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.marketplace.methods.purchaseProduct(id).send({\n        from: this.state.account,\n        value: price\n      }).once(\"receipt\", function (receipt) {\n        _this3.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        products: this.state.products,\n        createProduct: this.createProduct,\n        purchaseProduct: this.purchaseProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Store;\n}(Component); // Replace with your contract's address.\n\n\nvar contractAddress = \"0x4EaFf0d9Ce1c01910a1C4AeC87399A4caEc0a0Dd\";\n\nvar Dapp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dapp, _React$Component);\n\n  function Dapp(props) {\n    var _this4;\n\n    _classCallCheck(this, Dapp);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Dapp).call(this, props));\n    _this4.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var web3Provider, web3, networkID, currentTransfer;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // Calling Advanced Mode once, to enable the functionality\n              _this4.toggleAdvancedMode();\n              /**\n               * Accesing Metamask\n               */\n              // Initiate a wallet provider for older brownsers\n\n\n              if (!window.ethereum) {\n                _context4.next = 14;\n                break;\n              }\n\n              web3Provider = window.ethereum;\n              _context4.prev = 3;\n              _context4.next = 6;\n              return window.ethereum.enable();\n\n            case 6:\n              _context4.next = 12;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](3);\n\n              // User denied Account Access\n              _this4.logMetaMask(\"Please allow access to MetaMask\");\n\n              return _context4.abrupt(\"return\");\n\n            case 12:\n              _context4.next = 20;\n              break;\n\n            case 14:\n              if (!window.web3) {\n                _context4.next = 18;\n                break;\n              }\n\n              web3Provider = window.web3.currentProvider;\n              _context4.next = 20;\n              break;\n\n            case 18:\n              _this4.logMetaMask(\"Please install MetaMask\");\n\n              return _context4.abrupt(\"return\");\n\n            case 20:\n              /**\n               * Accessing Kovan Network\n               */\n              //create web3 wrapper for ethereum modules\n              web3 = new Web3(web3Provider); // Compare network ID´s\n\n              _context4.next = 23;\n              return web3.eth.net.getId();\n\n            case 23:\n              networkID = _context4.sent;\n\n              if (!(networkID !== 42)) {\n                _context4.next = 29;\n                break;\n              }\n\n              _this4.logMetaMask(\"Please set your network to Kovan\");\n\n              return _context4.abrupt(\"return\");\n\n            case 29:\n              _this4.logMetaMask(\"MetaMask connected to Kovan Wallet\");\n\n            case 30:\n              // Refresh if permission request is still pending\n              if (_this4.state.metamask === \"Loading information\") {\n                _this4.refreshPage();\n              } // Update Bitcion and Ether balances every 10 seconds\n\n\n              _this4.setState({\n                web3: web3\n              }, function () {\n                _this4.updateBalances();\n\n                setInterval(function () {\n                  _this4.updateBalances();\n                }, 10 * 1000);\n              }); // Start Listner to Catch certain Withdrawel Errors\n\n\n              _this4.CatchUndefError();\n              /**\n               * Process pending Tokenizing Transactions\n               */\n              // Check for incomplete transfers in Local Storage\n\n\n              currentTransfer = _this4.getTransfer(); // Check Transaction Bar for pending Tokenization\n\n              _this4.updateEthBar(); // Transfer is a deposit load tx and start animation\n\n\n              if (currentTransfer && currentTransfer.sendToken === RenJS.Tokens.BTC.Btc2Eth) {\n                _this4.deposit(currentTransfer);\n\n                _this4.PicturePulse(1);\n              } // Transfer is a withdrawal, load tx and start animation\n\n\n              if (currentTransfer && currentTransfer.sendToken === RenJS.Tokens.BTC.Eth2Btc) {\n                _this4.withdraw(currentTransfer);\n\n                _this4.PicturePulse(1);\n              }\n\n            case 37:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 8]]);\n    }));\n\n    _this4.render = function () {\n      var _this4$state = _this4.state,\n          balance = _this4$state.balance,\n          message = _this4$state.message,\n          error = _this4$state.error,\n          walleterror = _this4$state.walleterror,\n          depositamount = _this4$state.depositamount,\n          ether = _this4$state.ether,\n          logdeposit = _this4$state.logdeposit,\n          logstatus = _this4$state.logstatus,\n          logtxhash = _this4$state.logtxhash,\n          logconfirmations = _this4$state.logconfirmations;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"RenContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"WalletStatusContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"WalletStatusBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"WalletStatusLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"MetamaskPicture\",\n        alt: \"MetaMask\",\n        src: \"./metamask_logo_w.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"WalletStatusRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"StatusBarText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, walleterror)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"WalletOverview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"WalletOverviewLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"pic\",\n        className: \"RenPicture\",\n        alt: \"Ren Project\",\n        src: \"./ren_logo_W.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"WalletOverviewRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"WalletHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"My Wallet\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, balance, \" BTC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, ether, \" ETH\"))), React.createElement(\"div\", {\n        className: \"Ren\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"RenFunctionBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"RenButton\",\n        onClick: function onClick() {\n          return _this4.deposit().catch(_this4.logError);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Deposit \", depositamount, \" BTC\")), React.createElement(\"button\", {\n        className: \"RenButton\",\n        onClick: function onClick() {\n          return _this4.withdraw().catch(_this4.logError);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Withdraw \", balance, \" BTC\"))), React.createElement(\"div\", {\n        className: \"RenStatusBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"RenStatusBarHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Status Bar:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, message), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, error))))), React.createElement(\"div\", {\n        className: \"OptionWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"OptionButton\",\n        onClick: function onClick() {\n          return _this4.clearCache();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Clear Cache\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"OptionButton\",\n        onClick: function onClick() {\n          return _this4.refreshPage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Refresh Page\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"OptionButton\",\n        onClick: function onClick() {\n          return _this4.toggleAdvancedMode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Advanced View\"))), React.createElement(\"div\", {\n        className: \"AdvancedWindow\",\n        id: \"toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AdvancedMessageBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"AdvancedHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Attribute Logs\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"AdvancedAttribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Deposit from the Bitcoin Blockchain:\"), React.createElement(\"pre\", {\n        className: \"PreDeposit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, logdeposit)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"AdvancedAttribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Status of the Deposit Transaction:\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, logstatus)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"AdvancedAttribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Transaction Hash from the Ethereum Blockchain:\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, logtxhash)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"AdvancedAttribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Receipt will download in Advanced View after full confirmation.\"), React.createElement(\"div\", {\n        className: \"EthTXBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"progress\", {\n        className: \"EthTXProgress\",\n        id: \"ethbar\",\n        value: \"0\",\n        max: \"24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"EthTXText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"(currently \", logconfirmations, \"/24)\")))));\n    };\n\n    _this4.updateBalances =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var web3, contract, balance, accountaddress, ethbalance;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              web3 = _this4.state.web3;\n              contract = new web3.eth.Contract(ABI, contractAddress);\n              _context5.next = 4;\n              return contract.methods.balance().call();\n\n            case 4:\n              balance = _context5.sent;\n\n              _this4.setState({\n                balance: Number(parseInt(balance.toString()) / Math.pow(10, 8)).toFixed(5)\n              });\n\n              accountaddress = web3.currentProvider.selectedAddress;\n              _context5.next = 9;\n              return web3.eth.getBalance(accountaddress);\n\n            case 9:\n              ethbalance = _context5.sent;\n\n              _this4.setState({\n                ether: Number(web3.utils.fromWei(ethbalance)).toFixed(5)\n              });\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this4.logError = function (error) {\n      _this4.setState({\n        error: String((error || {}).message || error)\n      }); // Shorten words to maximum lenght of 40 chars\n\n\n      var words = _this4.state.error.split(\" \");\n\n      for (var i = 0; i < words.length; i++) {\n        if (words[i].length >= 40) {\n          words[i] = words[i].substring(0, 37).concat(\" ...\");\n        }\n      }\n\n      _this4.setState({\n        error: words.join(\" \")\n      });\n    };\n\n    _this4.logMetaMask = function (walleterror) {\n      _this4.setState({\n        walleterror: String((walleterror || {}).metamask || walleterror)\n      });\n    };\n\n    _this4.log = function (message) {\n      _this4.setState({\n        message: message\n      });\n    };\n\n    _this4.deposit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(transfer) {\n        var _this4$state2, web3, renJS, amount, mint, gatewayAddress, confirmations, deposit, signature;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // Reset error and start animation\n                _this4.logError(\"\");\n\n                _this4.PicturePulse(1); // Connect state and fetch amount of bitcoins\n\n\n                _this4$state2 = _this4.state, web3 = _this4$state2.web3, renJS = _this4$state2.renJS;\n                amount = _this4.state.depositamount; // BTC\n                // If no transfer in local storage, create a new one\n\n                transfer = transfer || {\n                  // Send BTC from the Bitcoin blockchain to the Ethereum blockchain.\n                  sendToken: RenJS.Tokens.BTC.Btc2Eth,\n\n                  /**\n                   * Contract we interact with\n                   * code found at ./ren_contract.sol \n                   */\n                  sendTo: contractAddress,\n                  // Name and nonce for the function we want to call\n                  contractFn: \"deposit\",\n                  nonce: renJS.utils.randomNonce(),\n                  // Arguments expected for calling `deposit`\n                  contractParams: [{\n                    name: \"_msg\",\n                    type: \"bytes\",\n                    value: web3.utils.fromAscii(\"Depositing \".concat(amount, \" BTC\"))\n                  }],\n                  // Web3 provider for submitting mint to Ethereum\n                  web3Provider: web3.currentProvider\n                }; // Save transaction and initiate mint process\n\n                _this4.storeTransfer(transfer);\n\n                mint = renJS.lockAndMint(transfer); // Show address for transfer of their BTC.\n\n                _context6.next = 9;\n                return mint.gatewayAddress();\n\n              case 9:\n                gatewayAddress = _context6.sent;\n\n                _this4.log(\"Deposit \".concat(amount, \" BTC to \").concat(gatewayAddress)); // Wait for the Darknodes to detect the BTC transfer.\n\n\n                confirmations = 0;\n                _context6.next = 14;\n                return mint.wait(confirmations).on(\"deposit\", function (deposit) {\n                  return _this4.storeTransfer(_objectSpread({}, transfer, {\n                    deposit: deposit\n                  }));\n                }).on(\"deposit\", function (deposit) {\n                  return _this4.updateAdvancedView(0, deposit);\n                });\n\n              case 14:\n                deposit = _context6.sent;\n\n                // Retrieve signature from RenVM.\n                _this4.log(\"Submitting to RenVM... waiting for two confirmations on the Bitcoin Blockchain\");\n\n                _context6.next = 18;\n                return deposit.submit().on(\"status\", function (status) {\n                  return _this4.updateAdvancedView(1, status);\n                });\n\n              case 18:\n                signature = _context6.sent;\n\n                // Submit the signature to Ethereum and receive zBTC.\n                _this4.log(\"Submitting to smart contract...\");\n\n                _context6.next = 22;\n                return signature.submitToEthereum(web3.currentProvider).on(\"transactionHash\", function (txHash) {\n                  return _this4.updateAdvancedView(2, txHash);\n                }).on(\"confirmation\", function (confirmation) {\n                  return _this4.updateAdvancedView(3, confirmation);\n                }).on(\"receipt\", function (receipt) {\n                  return _this4.download(JSON.stringify(receipt, null, 4), 'receipt.txt', 'text/plain');\n                });\n\n              case 22:\n                _this4.log(\"Deposited \".concat(amount, \" BTC.\")); // Clear transfer from local storage and stop animation\n\n\n                _this4.storeTransfer(undefined);\n\n                _this4.PicturePulse(0);\n\n              case 25:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this4.withdraw =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(transfer) {\n        var _this4$state3, web3, renJS, balance, amount, recipient, from, contract, ethereumTxHash, burn;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                // Reset error and start animation\n                _this4.logError(\"\");\n\n                _this4.PicturePulse(1); // Connect state\n\n\n                _this4$state3 = _this4.state, web3 = _this4$state3.web3, renJS = _this4$state3.renJS, balance = _this4$state3.balance; // No current transfer\n\n                if (transfer) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                amount = balance;\n                recipient = prompt(\"Enter BTC recipient:\");\n                _context7.next = 8;\n                return web3.eth.getAccounts();\n\n              case 8:\n                from = _context7.sent[0];\n                contract = new web3.eth.Contract(ABI, contractAddress); // Prepare Withdrawal\n\n                _this4.log(\"Calling `withdraw` on smart contract...\");\n\n                _context7.next = 13;\n                return new Promise(function (resolve, reject) {\n                  contract.methods.withdraw( // Message\n                  web3.utils.fromAscii(\"Depositing \".concat(amount, \" BTC\")), // Receiving Address\n                  RenJS.utils.btc.addressToHex(recipient), // Amount in Satoshis\n                  Math.floor(amount * Math.pow(10, 8))).send({\n                    from: from\n                  }).on(\"transactionHash\", resolve).catch(reject);\n                });\n\n              case 13:\n                ethereumTxHash = _context7.sent;\n                // Save transaction in local storage\n                transfer = {\n                  // Send BTC from the Ethereum blockchain to the Bitcoin blockchain.\n                  sendToken: RenJS.Tokens.BTC.Eth2Btc,\n                  // The web3 provider to talk to Ethereum\n                  web3Provider: web3.currentProvider,\n                  // The transaction hash of our contract call\n                  ethereumTxHash: ethereumTxHash\n                };\n\n                _this4.storeTransfer(transfer);\n\n              case 16:\n                // Burn BTC on Ethereum and release BTC on the Bitcoin blockchain\n                _this4.log(\"Retrieving burn event from contract...\");\n\n                _context7.next = 19;\n                return renJS.burnAndRelease(_objectSpread({}, transfer, {\n                  web3Provider: web3.currentProvider\n                })).readFromEthereum();\n\n              case 19:\n                burn = _context7.sent;\n\n                // Submit the burn transaction\n                _this4.log(\"Submitting to RenVM...\");\n\n                _context7.next = 23;\n                return burn.submit();\n\n              case 23:\n                _this4.log(\"Withdrew BTC successfully.\"); // Clear transfer from local storage and stop animation\n\n\n                _this4.storeTransfer(undefined);\n\n                _this4.PicturePulse(0);\n\n              case 26:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this4.storeTransfer = function (transfer) {\n      localStorage.setItem(\"transfer\", JSON.stringify(transfer));\n    };\n\n    _this4.getTransfer = function () {\n      try {\n        return JSON.parse(localStorage.getItem(\"transfer\"));\n      } catch (error) {\n        return undefined;\n      }\n    };\n\n    _this4.refreshPage = function () {\n      window.location.reload();\n    };\n\n    _this4.clearCache = function () {\n      _this4.storeTransfer(undefined);\n\n      _this4.refreshPage();\n    };\n\n    _this4.toggleAdvancedMode = function () {\n      var target = document.getElementById(\"toggle\");\n\n      if (target.style.display === \"none\") {\n        target.style.display = \"block\";\n      } else {\n        target.style.display = \"none\";\n      }\n    };\n\n    _this4.state = {\n      // Minimal\n      balance: 0,\n      message: \"\",\n      error: \"\",\n      // Custom\n      depositamount: 0.003,\n      metamask: \"\",\n      walleterror: \"Loading information\",\n      ether: 0,\n      // Advanced View\n      logdeposit: \"\",\n      logstatus: \"\",\n      logtxhash: \"\",\n      logconfirmations: 0,\n      logreceipt: \"\",\n      // Initiate Ren on Kovan testnet\n      renJS: new RenJS(\"testnet\")\n    };\n    return _this4;\n  }\n  /**\n   * When webcomponents from render()\n   * are displayed correctly, this function\n   * will be called to execute JS code.\n   */\n\n\n  _createClass(Dapp, [{\n    key: \"updateAdvancedView\",\n\n    /**\n     * Write received transaction metadata\n     * into Advanced View frontend\n     * \n     * @param {int} attrNumber \n     * @param {json} attrInfo \n     */\n    value: function updateAdvancedView(attrNumber, attrInfo) {\n      // Format attributes within json keys\n      var jsonkeys = [];\n\n      for (var key in attrInfo) {\n        if (attrNumber !== 4 && attrInfo[key].toString().length >= 100) {\n          attrInfo[key] = attrInfo[key].substring(0, 97).concat(\" ...\");\n        }\n\n        jsonkeys.push(key);\n\n        if (attrNumber !== 4 && typeof attrInfo[key] === \"object\") {\n          var jsonsubkeys = this.updateAdvancedView(attrNumber, attrInfo[key]);\n          jsonkeys = jsonkeys.concat(jsonsubkeys.map(function (subkey) {\n            if (attrInfo[key][subkey].toString().length >= 100) {\n              attrInfo[key][subkey] = attrInfo[key][subkey].substring(0, 20).concat(\" ...\");\n            }\n\n            return \"\".concat(key, \".\").concat(subkey);\n          }));\n        }\n      } // Write formated attributes into state\n\n\n      switch (attrNumber) {\n        case 0:\n          this.setState({\n            logdeposit: JSON.stringify(attrInfo, undefined, 2)\n          });\n          break;\n\n        case 1:\n          this.setState({\n            logstatus: JSON.stringify(attrInfo, undefined, 2)\n          });\n          break;\n\n        case 2:\n          this.setState({\n            logtxhash: JSON.stringify(attrInfo, undefined, 2)\n          });\n          break;\n\n        case 3:\n          this.setState({\n            logconfirmations: JSON.stringify(attrInfo, undefined, 2)\n          });\n          this.updateEthBar();\n          break;\n\n        case 4:\n          this.setState({\n            logreceipt: JSON.stringify(attrInfo, undefined, 2)\n          });\n          break;\n\n        default:\n          this.logError(\"Advanced View could not be updated with format\");\n      }\n\n      return jsonkeys;\n    }\n    /**\n     * Download attribute information into file\n     * \n     * Used in Advanced View for Receipt to\n     * be downloaded automatically\n     * \n     * @param {json} content \n     * @param {string, [name].[ending]} fileName \n     * @param {string} contentType \n     */\n\n  }, {\n    key: \"download\",\n    value: function download(content, fileName, contentType) {\n      // Preperating file\n      var a = document.createElement(\"a\");\n      var file = new Blob([content], {\n        type: contentType\n      });\n      a.href = URL.createObjectURL(file);\n      a.download = fileName; // When active, initiate download\n\n      var target = document.getElementById(\"toggle\");\n\n      if (target.style.display === \"block\") {\n        a.click();\n      } // Remove link for future deposits\n\n\n      URL.revokeObjectURL(a.href);\n    }\n    /**\n     * Start a Listener to catch 'unhandledrejection' Error.\n     * \n     * This may happen from wrong inputs or transactions from\n     * withdraw(). The transaction is revoked automatically\n     * by renJS and cleared from local storage. Due to less\n     * overhead compared to GatewayJS, manual catching may\n     * be needed in certain cases. \n     */\n\n  }, {\n    key: \"CatchUndefError\",\n    value: function CatchUndefError() {\n      // Start listener\n      window.addEventListener('unhandledrejection', function (event) {\n        // Clear local storage\n        localStorage.setItem(\"transfer\", JSON.stringify(undefined)); // Reload Window without stuck error and pending animation\n\n        window.location.reload();\n        this.PicturePulse(0);\n      });\n    }\n    /**\n     * Animates the logo from RenProject within the Wallet\n     * to indicate there is a pending transaction saved\n     * in local storage\n     * \n     * @param {boolean, indicates activity} bool \n     */\n\n  }, {\n    key: \"PicturePulse\",\n    value: function PicturePulse(bool) {\n      // Enable animation\n      if (bool === 1) {\n        document.getElementById(\"pic\").className = \"RenPicture PicturePulse\";\n      } else {\n        document.getElementById(\"pic\").className = \"RenPicture\";\n      }\n    }\n    /**\n     * Update the progress bar which shows the status of\n     * transaction confirmations on the Ethereum blockchain\n     */\n\n  }, {\n    key: \"updateEthBar\",\n    value: function updateEthBar() {\n      document.getElementById(\"ethbar\").setAttribute(\"value\", this.state.logconfirmations);\n    }\n  }]);\n\n  return Dapp;\n}(React.Component);\n\nexport { Store, Dapp };","map":{"version":3,"sources":["/Users/tejas/Desktop/marketplace/src/components/App.js"],"names":["React","Component","Web3","RenJS","Bitcoin","Ethereum","logo","Marketplace","ABI","Navbar","Main","Store","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","marketplace","Contract","abi","address","methods","productCount","call","i","products","product","state","loading","props","createProduct","bind","purchaseProduct","name","price","send","from","once","receipt","id","value","contractAddress","Dapp","componentDidMount","toggleAdvancedMode","web3Provider","logMetaMask","networkID","metamask","refreshPage","updateBalances","setInterval","CatchUndefError","currentTransfer","getTransfer","updateEthBar","sendToken","Tokens","BTC","Btc2Eth","deposit","PicturePulse","Eth2Btc","withdraw","render","balance","message","error","walleterror","depositamount","ether","logdeposit","logstatus","logtxhash","logconfirmations","catch","logError","clearCache","contract","Number","parseInt","toString","toFixed","accountaddress","selectedAddress","getBalance","ethbalance","utils","fromWei","String","words","split","length","substring","concat","join","log","transfer","renJS","amount","sendTo","contractFn","nonce","randomNonce","contractParams","type","fromAscii","storeTransfer","mint","lockAndMint","gatewayAddress","confirmations","wait","on","updateAdvancedView","submit","status","signature","submitToEthereum","txHash","confirmation","download","JSON","stringify","undefined","recipient","prompt","Promise","resolve","reject","btc","addressToHex","Math","floor","ethereumTxHash","burnAndRelease","readFromEthereum","burn","localStorage","setItem","parse","getItem","location","reload","target","document","getElementById","style","display","logreceipt","attrNumber","attrInfo","jsonkeys","key","push","jsonsubkeys","map","subkey","content","fileName","contentType","a","createElement","file","Blob","href","URL","createObjectURL","click","revokeObjectURL","addEventListener","event","bool","className","setAttribute"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\n//Need to correct RenJS tutorial BTC/ETH imports with newest NPM file hypehn\nimport RenJS from \"@renproject/ren\";\nimport { Bitcoin } from \"@renproject/chains-bitcoin\";\nimport { Ethereum } from \"@renproject/chains-ethereum\";\n\nimport logo from \"../logo.png\";\nimport \"./App.css\";\nimport Marketplace from \"../abis/Marketplace.json\";\nimport ABI from \"../abis/ABI.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\n\n// class dapp extends React.Component {\n//   render() {\n//     return  (\n//       <div className=\"bridge\">test\n//       <Renapp /></div>\n//     )\n//   }\n// }\n\nclass Store extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Marketplace.networks[networkId];\n    if (networkData) {\n      const marketplace = web3.eth.Contract(\n        Marketplace.abi,\n        networkData.address\n      );\n      this.setState({ marketplace });\n      const productCount = await marketplace.methods.productCount().call();\n      this.setState({ productCount });\n      // Load products\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call();\n        this.setState({\n          products: [...this.state.products, product],\n        });\n      }\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Marketplace contract not deployed to detected network.\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      productCount: 0,\n      products: [],\n      loading: true,\n    };\n\n    this.createProduct = this.createProduct.bind(this);\n    this.purchaseProduct = this.purchaseProduct.bind(this);\n  }\n\n  createProduct(name, price) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods\n      .createProduct(name, price)\n      .send({ from: this.state.account })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods\n      .purchaseProduct(id)\n      .send({ from: this.state.account, value: price })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.account} />\n        <div className=\"container mt-5\"> \n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              {this.state.loading ? (\n                <div id=\"loader\" className=\"text-center\">\n                  <p className=\"text-center\">Loading...</p>\n                </div>\n              ) : (\n                <Main\n                  products={this.state.products}\n                  createProduct={this.createProduct}\n                  purchaseProduct={this.purchaseProduct}\n                />\n              )}\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n    }\n  }\n\n// Replace with your contract's address.\nconst contractAddress = \"0x4EaFf0d9Ce1c01910a1C4AeC87399A4caEc0a0Dd\";\n\nclass Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      // Minimal\n      balance: 0,\n      message: \"\",\n      error: \"\",\n\n      // Custom\n      depositamount: 0.003,\n      metamask: \"\",\n      walleterror: \"Loading information\",\n      ether: 0,\n\n      // Advanced View\n      logdeposit: \"\",\n      logstatus: \"\",\n      logtxhash: \"\",\n      logconfirmations: 0,\n      logreceipt: \"\",\n\n      // Initiate Ren on Kovan testnet\n      renJS: new RenJS(\"testnet\"),\n    }\n  }\n\n  /**\n   * When webcomponents from render()\n   * are displayed correctly, this function\n   * will be called to execute JS code.\n   */\n  componentDidMount = async () => {\n\n    // Calling Advanced Mode once, to enable the functionality\n    this.toggleAdvancedMode();\n\n    /**\n     * Accesing Metamask\n     */\n\n    // Initiate a wallet provider for older brownsers\n    let web3Provider;\n\n    // For modern browsers\n    if (window.ethereum) {\n      web3Provider = window.ethereum;\n      try {\n        // Request Account Access\n        await window.ethereum.enable();\n      } catch (error) {\n        // User denied Account Access\n        this.logMetaMask(\"Please allow access to MetaMask\");\n        return;\n      }\n    }\n    // For old browsers\n    else if (window.web3) {\n      web3Provider = window.web3.currentProvider;\n    }\n    // Default\n    else {\n      this.logMetaMask(\"Please install MetaMask\");\n      return;\n    }\n\n    /**\n     * Accessing Kovan Network\n     */\n\n    //create web3 wrapper for ethereum modules\n    const web3 = new Web3(web3Provider);\n\n    // Compare network ID´s\n    const networkID = await web3.eth.net.getId();\n    if (networkID !== 42) {\n      this.logMetaMask(\"Please set your network to Kovan\");\n      return;\n    }\n    // Kovan selected\n    else {\n      this.logMetaMask(\"MetaMask connected to Kovan Wallet\");\n    }\n    \n    // Refresh if permission request is still pending\n    if(this.state.metamask === \"Loading information\" ){\n      this.refreshPage();\n    }\n\n    // Update Bitcion and Ether balances every 10 seconds\n    this.setState({ web3 }, () => {\n      this.updateBalances();\n      setInterval(() => {\n        this.updateBalances();\n      }, 10 * 1000);\n    });\n\n    // Start Listner to Catch certain Withdrawel Errors\n    this.CatchUndefError();\n\n    /**\n     * Process pending Tokenizing Transactions\n     */\n\n    // Check for incomplete transfers in Local Storage\n    const currentTransfer = this.getTransfer();\n\n    // Check Transaction Bar for pending Tokenization\n    this.updateEthBar();\n\n    // Transfer is a deposit load tx and start animation\n    if (currentTransfer && currentTransfer.sendToken === RenJS.Tokens.BTC.Btc2Eth) {\n      this.deposit(currentTransfer);\n      this.PicturePulse(1);\n    }\n    // Transfer is a withdrawal, load tx and start animation\n    if (currentTransfer && currentTransfer.sendToken === RenJS.Tokens.BTC.Eth2Btc) {\n        this.withdraw(currentTransfer);\n        this.PicturePulse(1);\n    }\n  }\n\n  /**\n   * Will render all tags from React\n   * into one webpage and binding the\n   * state variables into the frontend.\n   * \n   * Formatting is done with CSS\n   * in ./App.css\n   */\n  render = () => {\n    const { balance, \n            message, \n            error, \n            walleterror, \n            depositamount, \n            ether, \n            logdeposit, \n            logstatus, \n            logtxhash, \n            logconfirmations, \n          } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"RenContainer\">\n          <div className=\"WalletStatusContainer\">\n            <div className=\"WalletStatusBar\">\n              <div className=\"WalletStatusLeft\" >\n                <img className=\"MetamaskPicture\" alt=\"MetaMask\" src=\"./metamask_logo_w.png\"></img>\n              </div>\n              <div className=\"WalletStatusRight\">\n                <p className=\"StatusBarText\">{walleterror}</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"WalletOverview\">\n              <div className=\"WalletOverviewLeft\">\n                <img id=\"pic\" className=\"RenPicture\" alt=\"Ren Project\" src=\"./ren_logo_W.png\"></img>\n              </div>\n              <div className=\"WalletOverviewRight\">\n                <p className=\"WalletHeading\" >My Wallet</p>\n                <p>{balance} BTC</p>\n                <p>{ether} ETH</p>\n              </div>\n            </div>\n            <div className=\"Ren\">\n                <div className=\"RenFunctionBar\">\n                  <button className=\"RenButton\" onClick={() => this.deposit().catch(this.logError)}><span>Deposit {depositamount} BTC</span></button>\n                  <button className=\"RenButton\" onClick={() => this.withdraw().catch(this.logError)}><span>Withdraw {balance} BTC</span></button>\n                </div>\n                <div className=\"RenStatusBar\">\n                  <p className=\"RenStatusBarHeading\" >Status Bar:</p>\n                  <p>{message}</p>\n                  <p>{error}</p>\n                </div>\n              </div>\n          </div>\n        </div>\n        <div className=\"OptionWindow\">\n            <div><button className=\"OptionButton\" onClick={() => this.clearCache()}>Clear Cache</button></div>\n            <p></p>\n            <div><button className=\"OptionButton\" onClick={() => this.refreshPage()}>Refresh Page</button></div>\n            <p></p>\n            <div><button className=\"OptionButton\" onClick={() => this.toggleAdvancedMode()}>Advanced View</button></div>\n        </div>\n        <div className=\"AdvancedWindow\" id=\"toggle\">\n            <div className=\"AdvancedMessageBox\">\n              <p className=\"AdvancedHeading\" >Attribute Logs</p>\n                <div>\n                  <p className=\"AdvancedAttribute\">Deposit from the Bitcoin Blockchain:</p>\n                  <pre className=\"PreDeposit\">{logdeposit}</pre>\n                </div>\n                <div>\n                  <p className=\"AdvancedAttribute\">Status of the Deposit Transaction:</p>\n                  <pre>{logstatus}</pre>\n                </div>\n                <div>\n                  <p className=\"AdvancedAttribute\">Transaction Hash from the Ethereum Blockchain:</p>\n                  <pre>{logtxhash}</pre>\n                </div>\n                <div>\n                  <p className=\"AdvancedAttribute\">Receipt will download in Advanced View after full confirmation.</p>\n                  <div className=\"EthTXBar\">\n                    <progress className=\"EthTXProgress\" id=\"ethbar\" value=\"0\" max=\"24\"></progress>\n                  </div>\n                  <p className=\"EthTXText\">(currently {logconfirmations}/24)</p>\n                </div>\n            </div>\n          </div>\n      </div>\n    );\n  }\n\n  /**\n   * Functions declared within the App class\n   */\n\n  /**\n   * Loading the current balances of Bitcoin \n   * and Ethereum from the wallets\n   * \n   * Asincronus function, so information can be\n   * resolved besides the regular program flow\n   */\n  updateBalances = async () => {\n    const { web3 } = this.state;\n    const contract = new web3.eth.Contract(ABI, contractAddress);\n    const balance = await contract.methods.balance().call();\n    this.setState({ balance: Number(parseInt(balance.toString()) / 10 ** 8).toFixed(5) });\n\n    var accountaddress = web3.currentProvider.selectedAddress;\n    const ethbalance = await web3.eth.getBalance(accountaddress);\n    this.setState({ ether: Number(web3.utils.fromWei(ethbalance)).toFixed(5) });\n  }\n\n  /**\n   * Save error to state\n   * \n   * @param {raw string} error \n   */\n  logError = (error) => {\n    this.setState({ error: String(( error || {}).message || error) });\n    \n    // Shorten words to maximum lenght of 40 chars\n    var words = this.state.error.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if (words[i].length >= 40){\n          words[i] = words[i].substring(0,37).concat(\" ...\");\n        }\n    }\n    this.setState({ error: words.join(\" \")})\n  }\n\n  /**\n   * Save wallet related errors to state\n   * \n   * @param {raw string} walleterror \n   */\n  logMetaMask = (walleterror) => {\n    this.setState({ walleterror: String((walleterror || {}).metamask || walleterror) });\n  }\n\n  /**\n   * Save Current executed process to state\n   * \n   * @param {raw string} message \n   */\n  log = (message) => {\n    this.setState({ message });\n  }\n\n  /**\n   * Load and Execute a BTC-to-ETH Tokenization\n   * with RenJS\n   * \n   * Asincronus function, so information can be\n   * resolved besides the regular program flow\n   * \n   * @param {json, saved in local storage} transfer \n   */\n  deposit = async (transfer) => {\n    // Reset error and start animation\n    this.logError(\"\"); \n    this.PicturePulse(1);\n\n    // Connect state and fetch amount of bitcoins\n    const { web3, renJS } = this.state;\n    const amount = this.state.depositamount; // BTC\n\n    // If no transfer in local storage, create a new one\n    transfer = transfer || {\n      // Send BTC from the Bitcoin blockchain to the Ethereum blockchain.\n      sendToken: RenJS.Tokens.BTC.Btc2Eth,\n\n      /**\n       * Contract we interact with\n       * code found at ./ren_contract.sol \n       */\n      sendTo: contractAddress,\n\n      // Name and nonce for the function we want to call\n      contractFn: \"deposit\",\n      nonce: renJS.utils.randomNonce(),\n\n      // Arguments expected for calling `deposit`\n      contractParams: [\n        {\n          name: \"_msg\",\n          type: \"bytes\",\n          value: web3.utils.fromAscii(`Depositing ${amount} BTC`),\n        }\n      ],\n\n      // Web3 provider for submitting mint to Ethereum\n      web3Provider: web3.currentProvider,\n    };\n\n    // Save transaction and initiate mint process\n    this.storeTransfer(transfer);\n    const mint = renJS.lockAndMint(transfer);\n    \n    // Show address for transfer of their BTC.\n    const gatewayAddress = await mint.gatewayAddress();\n    this.log(`Deposit ${amount} BTC to ${gatewayAddress}`);\n\n    // Wait for the Darknodes to detect the BTC transfer.\n    const confirmations = 0;\n    const deposit = await mint.wait(confirmations)\n    .on(\"deposit\", deposit => this.storeTransfer({ ...transfer, deposit }))\n    .on(\"deposit\", deposit => this.updateAdvancedView(0, deposit));\n    \n    // Retrieve signature from RenVM.\n    this.log(\"Submitting to RenVM... waiting for two confirmations on the Bitcoin Blockchain\");\n    const signature = await deposit.submit()\n      .on(\"status\", status => this.updateAdvancedView(1, status));\n\n    // Submit the signature to Ethereum and receive zBTC.\n    this.log(\"Submitting to smart contract...\");\n    await signature.submitToEthereum(web3.currentProvider)\n      .on(\"transactionHash\", txHash => this.updateAdvancedView(2, txHash))\n      .on(\"confirmation\", confirmation => this.updateAdvancedView(3, confirmation))\n      .on(\"receipt\", receipt => this.download(JSON.stringify(receipt, null, 4), 'receipt.txt', 'text/plain'));\n    this.log(`Deposited ${amount} BTC.`);\n    \n    // Clear transfer from local storage and stop animation\n    this.storeTransfer(undefined);\n    this.PicturePulse(0);\n  }\n\n  /**\n   * Load and Execute a ETH-to-BTC Tokenization\n   * with RenJS\n   * \n   * Asincronus function, so information can be\n   * resolved besides the regular program flow\n   * \n   * @param {json, stored in local storage} transfer \n   */\n  withdraw = async (transfer) => {\n    // Reset error and start animation\n    this.logError(\"\");\n    this.PicturePulse(1);\n  \n    // Connect state\n    const { web3, renJS, balance } = this.state;\n  \n    // No current transfer\n    if (!transfer) {\n      const amount = balance;\n      const recipient = prompt(\"Enter BTC recipient:\");\n      const from = (await web3.eth.getAccounts())[0];\n      const contract = new web3.eth.Contract(ABI, contractAddress);\n  \n      // Prepare Withdrawal\n      this.log(\"Calling `withdraw` on smart contract...\");\n      const ethereumTxHash = await new Promise((resolve, reject) => {\n        contract.methods.withdraw(\n          // Message\n          web3.utils.fromAscii(`Depositing ${amount} BTC`),\n          // Receiving Address\n          RenJS.utils.btc.addressToHex(recipient),\n           // Amount in Satoshis\n          Math.floor(amount * (10 ** 8)),\n        ).send({ from })\n          .on(\"transactionHash\", resolve)\n          .catch(reject);\n      });\n  \n      // Save transaction in local storage\n      transfer = {\n        // Send BTC from the Ethereum blockchain to the Bitcoin blockchain.\n        sendToken: RenJS.Tokens.BTC.Eth2Btc,\n\n        // The web3 provider to talk to Ethereum\n        web3Provider: web3.currentProvider,\n  \n        // The transaction hash of our contract call\n        ethereumTxHash,\n      };\n      this.storeTransfer(transfer);\n    }\n  \n    // Burn BTC on Ethereum and release BTC on the Bitcoin blockchain\n    this.log(`Retrieving burn event from contract...`);\n    const burn = await renJS.burnAndRelease({ ...transfer, web3Provider: web3.currentProvider }).readFromEthereum();\n  \n    // Submit the burn transaction\n    this.log(`Submitting to RenVM...`);\n    await burn.submit();\n  \n    this.log(`Withdrew BTC successfully.`);\n  \n    // Clear transfer from local storage and stop animation\n    this.storeTransfer(undefined);\n    this.PicturePulse(0);\n  }\n\n  /**\n   * Store transfer details to local storage\n   * \n   * @param {json} transfer \n   */\n  storeTransfer = (transfer) => {\n    localStorage.setItem(\"transfer\", JSON.stringify(transfer));\n  }\n\n  /**\n   * Retrieve a transfer's details from \n   * local storage, if there is one\n   * \n   * Will return undefined json object\n   * if no current transaction\n   */\n  getTransfer = () => {\n    try {\n      return JSON.parse(localStorage.getItem(\"transfer\"));\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  /**\n   * Option Window Function: \n   * Manually refresh Page\n   * from frontend\n   */\n  refreshPage = () => {\n    window.location.reload();\n  }\n\n  /**\n   * Option Window Function:\n   * Manually wipe current transaction \n   * which is saved in local storage\n   */\n  clearCache = () => {\n    this.storeTransfer(undefined);\n    this.refreshPage();\n  }\n\n  /**\n   * Option Window Function:\n   * Open the Advanced View for extra information about the \n   * current deposit transaction and to download the receipt\n   */\n  toggleAdvancedMode = () => {\n    var target = document.getElementById(\"toggle\");\n    if (target.style.display === \"none\") {\n      target.style.display = \"block\";\n    } \n    else {\n      target.style.display = \"none\";\n    }\n  }\n\n  /**\n   * Write received transaction metadata\n   * into Advanced View frontend\n   * \n   * @param {int} attrNumber \n   * @param {json} attrInfo \n   */\n  updateAdvancedView(attrNumber, attrInfo) {\n\n    // Format attributes within json keys\n    var jsonkeys = [];\n    for(var key in attrInfo) {\n      if(attrNumber !== 4 && attrInfo[key].toString().length >= 100){\n        attrInfo[key] = attrInfo[key].substring(0,97).concat(\" ...\");\n      }\n      jsonkeys.push(key);\n      if(attrNumber !== 4 && typeof attrInfo[key] === \"object\") {\n        var jsonsubkeys = this.updateAdvancedView(attrNumber, attrInfo[key]);\n        jsonkeys = jsonkeys.concat(jsonsubkeys.map(function(subkey) {\n            if(attrInfo[key][subkey].toString().length >= 100){\n              attrInfo[key][subkey] = attrInfo[key][subkey].substring(0,20).concat(\" ...\");\n            }\n          return `${key}.${subkey}`;\n        }));\n      }\n    }\n    // Write formated attributes into state\n    switch(attrNumber){\n      case 0: \n        this.setState({ logdeposit: JSON.stringify(attrInfo, undefined, 2) });\n        break;\n      case 1: \n        this.setState({ logstatus: JSON.stringify(attrInfo, undefined, 2) });\n        break;\n      case 2: \n        this.setState({ logtxhash: JSON.stringify(attrInfo, undefined, 2) });\n        break;\n      case 3: \n        this.setState({ logconfirmations: JSON.stringify(attrInfo, undefined, 2) });\n        this.updateEthBar();\n        break;\n      case 4: \n        this.setState({ logreceipt: JSON.stringify(attrInfo, undefined, 2) });\n        break;\n      default:\n        this.logError(\"Advanced View could not be updated with format\");\n    }\n    return jsonkeys;\n  }\n\n  /**\n   * Download attribute information into file\n   * \n   * Used in Advanced View for Receipt to\n   * be downloaded automatically\n   * \n   * @param {json} content \n   * @param {string, [name].[ending]} fileName \n   * @param {string} contentType \n   */\n  download(content, fileName, contentType) {\n\n    // Preperating file\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n\n    // When active, initiate download\n    var target = document.getElementById(\"toggle\");\n    if (target.style.display === \"block\") {\n      a.click();\n    } \n    // Remove link for future deposits\n    URL.revokeObjectURL(a.href)\n  }\n\n  /**\n   * Start a Listener to catch 'unhandledrejection' Error.\n   * \n   * This may happen from wrong inputs or transactions from\n   * withdraw(). The transaction is revoked automatically\n   * by renJS and cleared from local storage. Due to less\n   * overhead compared to GatewayJS, manual catching may\n   * be needed in certain cases. \n   */\n  CatchUndefError(){\n    // Start listener\n    window.addEventListener('unhandledrejection', function(event) {\n      \n      // Clear local storage\n      localStorage.setItem(\"transfer\", JSON.stringify(undefined));\n\n      // Reload Window without stuck error and pending animation\n      window.location.reload();\n      this.PicturePulse(0);\n    });\n  }\n\n  /**\n   * Animates the logo from RenProject within the Wallet\n   * to indicate there is a pending transaction saved\n   * in local storage\n   * \n   * @param {boolean, indicates activity} bool \n   */\n  PicturePulse(bool) {\n    // Enable animation\n    if(bool === 1){\n      document.getElementById(\"pic\").className=\"RenPicture PicturePulse\"\n    }\n    else{\n      document.getElementById(\"pic\").className=\"RenPicture\"\n    }\n  }\n\n  /**\n   * Update the progress bar which shows the status of\n   * transaction confirmations on the Ethereum blockchain\n   */\n  updateEthBar() {\n    document.getElementById(\"ethbar\").setAttribute(\"value\", this.state.logconfirmations);\n  }\n}\n\nexport {\n  Store,\n  Dapp,\n}"]},"metadata":{},"sourceType":"module"}