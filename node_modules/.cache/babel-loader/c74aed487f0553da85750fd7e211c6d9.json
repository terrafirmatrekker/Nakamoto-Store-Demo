{"ast":null,"code":"import _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _FantomConfigMap;\n\nimport { getRenNetworkDetails, RenNetwork } from \"@renproject/interfaces\";\nimport { Callable, utilsWithChainNetwork } from \"@renproject/utils\";\nimport { EthereumClass } from \"./ethereum\";\nimport { addressIsValid } from \"./utils\";\nexport var renFantomTestnet = {\n  name: \"Fantom Testnet\",\n  chain: \"fantomTestnet\",\n  isTestnet: true,\n  chainLabel: \"Fantom Testnet\",\n  networkID: 0xfa2,\n  infura: \"https://rpc.testnet.fantom.network/\",\n  etherscan: \"https://testnet.ftmscan.com\",\n  addresses: {\n    GatewayRegistry: \"0x1207765B53697a046DCF4AE95bd4dE99ef9D3D3C\",\n    BasicAdapter: \"0x07deB3917d234f787AEd86E0c88E829277D4a33b\"\n  }\n};\nexport var renFantomDevnet = _objectSpread({}, renFantomTestnet, {\n  addresses: {\n    GatewayRegistry: \"0xD881213F5ABF783d93220e6bD3Cc21706A8dc1fC\",\n    BasicAdapter: \"0xD087b0540e172553c12DEEeCDEf3dFD21Ec02066\"\n  }\n});\nexport var renFantomMainnet = {\n  name: \"Fantom Mainnet\",\n  chain: \"fantomMainnet\",\n  isTestnet: false,\n  chainLabel: \"Fantom Mainnet\",\n  networkID: 250,\n  infura: \"https://rpcapi.fantom.network/\",\n  etherscan: \"https://ftmscan.com\",\n  addresses: {\n    GatewayRegistry: \"0x21C482f153D0317fe85C60bE1F7fa079019fcEbD\",\n    BasicAdapter: \"0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5\"\n  }\n};\nexport var FantomConfigMap = (_FantomConfigMap = {}, _defineProperty(_FantomConfigMap, RenNetwork.TestnetVDot3, renFantomTestnet), _defineProperty(_FantomConfigMap, RenNetwork.MainnetVDot3, renFantomMainnet), _defineProperty(_FantomConfigMap, RenNetwork.DevnetVDot3, renFantomDevnet), _FantomConfigMap);\n\nvar resolveFantomNetwork = function resolveFantomNetwork(renNetwork) {\n  if (!renNetwork) {\n    return FantomConfigMap[RenNetwork.MainnetVDot3];\n  }\n\n  if (renNetwork.addresses) {\n    return renNetwork;\n  } else {\n    var details = getRenNetworkDetails(renNetwork);\n    return details.isTestnet ? details.name === RenNetwork.DevnetVDot3 ? renFantomDevnet : renFantomTestnet : renFantomMainnet;\n  }\n};\n\nexport var FantomClass =\n/*#__PURE__*/\nfunction (_EthereumClass) {\n  _inherits(FantomClass, _EthereumClass);\n\n  function FantomClass(web3Provider, renNetwork) {\n    var _this;\n\n    _classCallCheck(this, FantomClass);\n\n    // To be compatible with the Ethereum chain class, the first parameter\n    // is a web3Provider and the second the RenVM network. However,\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FantomClass).call(this, web3Provider, resolveFantomNetwork(renNetwork)));\n    _this.chain = FantomClass.chain;\n    _this.name = FantomClass.chain;\n    _this.legacyName = undefined;\n    _this.utils = utilsWithChainNetwork(FantomClass.utils, function () {\n      return _this.renNetworkDetails;\n    });\n\n    _this.initialize = function (renNetwork) {\n      _this.renNetworkDetails = _this.renNetworkDetails || FantomConfigMap[getRenNetworkDetails(renNetwork).name];\n\n      if (!_this.renNetworkDetails) {\n        throw new Error(\"Unable to set \".concat(_this.name, \" network for RenVM network \").concat(getRenNetworkDetails(renNetwork).name, \". Please provide \").concat(_this.name, \" network details to \").concat(_this.name, \" constructor.\"));\n      }\n\n      return _assertThisInitialized(_assertThisInitialized(_this));\n    };\n\n    return _this;\n  }\n\n  return FantomClass;\n}(EthereumClass);\nFantomClass.chain = \"Fantom\";\nFantomClass.utils = {\n  resolveChainNetwork: resolveFantomNetwork,\n  addressIsValid: addressIsValid,\n  addressExplorerLink: function addressExplorerLink(address, network) {\n    return \"\".concat((FantomClass.utils.resolveChainNetwork(network) || renFantomMainnet).etherscan, \"/address/\").concat(address);\n  },\n  transactionExplorerLink: function transactionExplorerLink(transaction, network) {\n    return \"\".concat((Fantom.utils.resolveChainNetwork(network) || renFantomMainnet).etherscan, \"/tx/\").concat(transaction);\n  }\n}; // @dev Removes any static fields, except `utils`.\n\nexport var Fantom = Callable(FantomClass);","map":null,"metadata":{},"sourceType":"module"}