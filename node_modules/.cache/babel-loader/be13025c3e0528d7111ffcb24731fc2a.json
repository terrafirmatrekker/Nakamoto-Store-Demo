{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Callable } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport { sortUTXOs, DEFAULT_TIMEOUT } from \"./API\";\nexport var BlockstreamClass = function BlockstreamClass() {\n  var _this = this;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$testnet = _ref.testnet,\n      testnet = _ref$testnet === void 0 ? false : _ref$testnet,\n      _ref$apiKey = _ref.apiKey,\n      apiKey = _ref$apiKey === void 0 ? undefined : _ref$apiKey;\n\n  _classCallCheck(this, BlockstreamClass);\n\n  this.getAPIUrl = function (path) {\n    return \"https://blockstream.info/\".concat(_this.testnet ? \"testnet/\" : \"\", \"api\").concat(path).concat(_this.apiKey ? \"?key=\".concat(_this.apiKey) : \"\");\n  };\n\n  this.fetchUTXO =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(txHash, vOut) {\n      var utxo, heightResponse, confirmations;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(_this.getAPIUrl(\"/tx/\".concat(txHash)), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 2:\n              utxo = _context.sent.data;\n              _context.next = 5;\n              return axios.get(_this.getAPIUrl(\"/blocks/tip/height\"), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 5:\n              heightResponse = _context.sent.data;\n              confirmations = utxo.status.confirmed ? Math.max(1 + parseInt(heightResponse, 10) - utxo.status.block_height, 0) : 0;\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                amount: utxo.vout[vOut].value.toString(),\n                vOut: vOut,\n                confirmations: confirmations\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.fetchUTXOs =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(address) {\n      var confirmations,\n          response,\n          heightResponse,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              confirmations = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 0;\n              _context2.next = 3;\n              return axios.get(_this.getAPIUrl(\"/address/\".concat(address, \"/utxo\")), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return axios.get(_this.getAPIUrl(\"/blocks/tip/height\"), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 6:\n              heightResponse = _context2.sent;\n              return _context2.abrupt(\"return\", response.data.map(function (utxo) {\n                return {\n                  txHash: utxo.txid,\n                  amount: utxo.value.toString(),\n                  vOut: utxo.vout,\n                  confirmations: utxo.status.confirmed ? 1 + parseInt(heightResponse.data, 10) - utxo.status.block_height : 0\n                };\n              }).filter(function (utxo) {\n                return confirmations === 0 || utxo.confirmations >= confirmations;\n              }).sort(sortUTXOs));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.fetchTXs =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(address) {\n      var confirmations,\n          response,\n          heightResponse,\n          received,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          tx,\n          i,\n          vout,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              confirmations = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 0;\n              _context3.next = 3;\n              return axios.get(_this.getAPIUrl(\"/address/\".concat(address, \"/txs\")), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 3:\n              response = _context3.sent;\n              _context3.next = 6;\n              return axios.get(_this.getAPIUrl(\"/blocks/tip/height\"), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 6:\n              heightResponse = _context3.sent;\n              received = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context3.prev = 11;\n\n              for (_iterator = response.data[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                tx = _step.value;\n\n                for (i = 0; i < tx.vout.length; i++) {\n                  vout = tx.vout[i];\n\n                  if (vout.scriptpubkey_address === address) {\n                    received.push({\n                      txHash: tx.txid,\n                      amount: vout.value.toString(),\n                      vOut: i,\n                      confirmations: tx.status.confirmed ? 1 + parseInt(heightResponse.data, 10) - tx.status.block_height : 0\n                    });\n                  }\n                }\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](11);\n              _didIteratorError = true;\n              _iteratorError = _context3.t0;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.prev = 20;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 22:\n              _context3.prev = 22;\n\n              if (!_didIteratorError) {\n                _context3.next = 25;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 25:\n              return _context3.finish(22);\n\n            case 26:\n              return _context3.finish(19);\n\n            case 27:\n              return _context3.abrupt(\"return\", received.filter(function (utxo) {\n                return confirmations === 0 || utxo.confirmations >= confirmations;\n              }).sort(sortUTXOs));\n\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[11, 15, 19, 27], [20,, 22, 26]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.broadcastTransaction =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(txHex) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.post(_this.getAPIUrl(\"/tx\"), txHex, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 2:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response.data);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.testnet = testnet;\n  this.apiKey = apiKey;\n};\nexport var Blockstream = Callable(BlockstreamClass);","map":null,"metadata":{},"sourceType":"module"}