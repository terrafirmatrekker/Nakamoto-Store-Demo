{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _objectSpread from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Callable } from \"@renproject/utils\";\nimport BigNumber from \"bignumber.js\"; // Default timeout for network requests.\n\nvar SECONDS = 1000;\nexport var DEFAULT_TIMEOUT = 30 * SECONDS;\n/**\n * sortUTXOs compares two UTXOs by amount, then confirmations and then hash.\n *\n * @example\n * sortUTXOs({amount: 1, confirmations: 1}, {amount: 2, confirmations: 0});\n * // -1, representing that the first parameter should be ordered first.\n *\n * @returns a negative value to represent that a should come before b or a\n * positive value to represent that b should come before a.\n */\n\nexport var sortUTXOs = function sortUTXOs(a, b) {\n  var aAmount = new BigNumber(a.amount);\n  var bAmount = new BigNumber(b.amount); // Sort greater values first.\n\n  return !aAmount.isEqualTo(bAmount) ? bAmount.minus(aAmount).toNumber() : // If the UTXOs have the same value, sort by number of confirmations.\n  a.confirmations !== b.confirmations ? a.confirmations - b.confirmations : // Fallback so sorting by txHash alphabetically.\n  a.txHash <= b.txHash ? -1 : 1;\n};\n/**\n * fixValue turns a readable value, e.g. `0.0001` BTC, to the value in the smallest\n * unit, e.g. `10000` sats.\n *\n * @example\n * fixValue(0.0001, 8) = 10000;\n *\n * @param value Value in the readable representation, e.g. `0.0001` BTC.\n * @param decimals The number of decimals to shift by, e.g. 8.\n */\n\nexport var fixValue = function fixValue(value, decimals) {\n  return new BigNumber(value).multipliedBy(new BigNumber(10).exponentiatedBy(decimals)).decimalPlaces(0);\n};\n/**\n * fixUTXO calls {{fixValue}} on the value of the UTXO.\n */\n\nexport var fixUTXO = function fixUTXO(utxo, decimals) {\n  return _objectSpread({}, utxo, {\n    amount: fixValue(utxo.amount, decimals).toFixed()\n  });\n};\n/**\n * fixUTXOs maps over an array of UTXOs and calls {{fixValue}}.\n */\n\nexport var fixUTXOs = function fixUTXOs(utxos, decimals) {\n  return utxos.map(function (utxo) {\n    return fixUTXO(utxo, decimals);\n  });\n};\n\nvar notNull = function notNull(x) {\n  if (x === undefined || x === null) {\n    throw new Error(\"Unexpected \".concat(String(x), \" value.\"));\n  }\n\n  return x;\n};\n\nvar withPriority = function withPriority(api) {\n  var defaultPriority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return api.api && api.priority !== undefined ? api : {\n    api: api,\n    priority: defaultPriority\n  };\n};\n\nexport var CombinedAPIClass = function CombinedAPIClass() {\n  var _this = this;\n\n  var apis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$priority = _ref.priority,\n      priority = _ref$priority === void 0 ? 0 : _ref$priority;\n\n  _classCallCheck(this, CombinedAPIClass);\n\n  /**\n   * Provide a new API to be used with the other APIs.\n   *\n   * @param api\n   * @param { priority } Optionally set the priority of the API, where a lower\n   * priority means it will be selected before other APIs.\n   */\n  this.withAPI = function (api) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$priority = _ref2.priority,\n        priority = _ref2$priority === void 0 ? 0 : _ref2$priority;\n\n    _this.apis.push(withPriority(api, priority));\n\n    return _this;\n  };\n\n  this.fetchUTXO =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(txHash, vOut) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", _this.forEachAPI( // Filter APIs with `fetchUTXO`.\n              function (api) {\n                return api.fetchUTXO !== undefined;\n              },\n              /*#__PURE__*/\n              // Call `fetchUTXO` on the API.\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(api) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.abrupt(\"return\", notNull(api.fetchUTXO)(txHash, vOut));\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x3) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.fetchUTXOs =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(address, confirmations) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", _this.forEachAPI( // Filter APIs with `fetchUTXOs`.\n              function (api) {\n                return api.fetchUTXOs !== undefined;\n              },\n              /*#__PURE__*/\n              // Call `fetchUTXOs` on the API.\n              function () {\n                var _ref6 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3(api) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          return _context3.abrupt(\"return\", notNull(api.fetchUTXOs)(address, confirmations));\n\n                        case 1:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x6) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.fetchTXs =\n  /*#__PURE__*/\n  function () {\n    var _ref7 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(address, confirmations) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", _this.forEachAPI( // Filter APIs with `fetchTXs`.\n              function (api) {\n                return api.fetchTXs !== undefined;\n              },\n              /*#__PURE__*/\n              // Call `fetchTXs` on the API.\n              function () {\n                var _ref8 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee5(api) {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          return _context5.abrupt(\"return\", notNull(api.fetchTXs)(address, confirmations));\n\n                        case 1:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x9) {\n                  return _ref8.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  this.broadcastTransaction =\n  /*#__PURE__*/\n  function () {\n    var _ref9 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8(hex) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", _this.forEachAPI( // Filter APIs with `broadcastTransaction`.\n              function (api) {\n                return api.broadcastTransaction !== undefined;\n              },\n              /*#__PURE__*/\n              // Call `broadcastTransaction` on the API.\n              function () {\n                var _ref10 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee7(api) {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          return _context7.abrupt(\"return\", notNull(api.broadcastTransaction)(hex));\n\n                        case 1:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x11) {\n                  return _ref10.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x10) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  this.forEachAPI =\n  /*#__PURE__*/\n  function () {\n    var _ref11 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9(filter, onAPI) {\n      var apis, firstError, previousIndices, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, api, index, result, _i, _previousIndices, previousIndex;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              apis = _this.apis.map(function (api, index) {\n                return {\n                  api: api,\n                  index: index\n                };\n              }).filter(function (_ref12) {\n                var api = _ref12.api;\n                return filter(api.api);\n              }).sort(function (_ref13, _ref14) {\n                var a = _ref13.api;\n                var b = _ref14.api;\n                return (// Sort by priority, and randomly for the same priority.\n                  a.priority !== b.priority ? a.priority - b.priority : Math.random() * 2 - 1\n                );\n              });\n\n              if (apis.length) {\n                _context9.next = 3;\n                break;\n              }\n\n              throw new Error(\"No API available for call.\");\n\n            case 3:\n              previousIndices = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context9.prev = 7;\n              _iterator = apis[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context9.next = 26;\n                break;\n              }\n\n              _step$value = _step.value, api = _step$value.api, index = _step$value.index;\n              _context9.prev = 11;\n              _context9.next = 14;\n              return onAPI(api.api);\n\n            case 14:\n              result = _context9.sent;\n\n              // If any previous API failed, it may be down or rate limited,\n              // so its priority is reduced.\n              for (_i = 0, _previousIndices = previousIndices; _i < _previousIndices.length; _i++) {\n                previousIndex = _previousIndices[_i];\n                _this.apis[previousIndex].priority -= 5;\n              }\n\n              return _context9.abrupt(\"return\", result);\n\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](11);\n              previousIndices.push(index);\n              firstError = firstError || _context9.t0;\n\n            case 23:\n              _iteratorNormalCompletion = true;\n              _context9.next = 9;\n              break;\n\n            case 26:\n              _context9.next = 32;\n              break;\n\n            case 28:\n              _context9.prev = 28;\n              _context9.t1 = _context9[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context9.t1;\n\n            case 32:\n              _context9.prev = 32;\n              _context9.prev = 33;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 35:\n              _context9.prev = 35;\n\n              if (!_didIteratorError) {\n                _context9.next = 38;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 38:\n              return _context9.finish(35);\n\n            case 39:\n              return _context9.finish(32);\n\n            case 40:\n              throw firstError;\n\n            case 41:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[7, 28, 32, 40], [11, 19], [33,, 35, 39]]);\n    }));\n\n    return function (_x12, _x13) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  this.apis = apis.map(function (api) {\n    return withPriority(api, priority);\n  });\n};\nexport var CombinedAPI = Callable(CombinedAPIClass);","map":null,"metadata":{},"sourceType":"module"}