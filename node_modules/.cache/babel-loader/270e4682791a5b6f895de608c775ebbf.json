{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BitcoinDotCom = exports.broadcastTransaction = void 0;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar utxo_1 = require(\"../../lib/utxo\");\n\nvar timeout_1 = require(\"./timeout\");\n\nvar endpoint = function endpoint(testnet) {\n  return testnet ? \"https://trest.bitcoin.com/v2/\" : \"https://rest.bitcoin.com/v2/\";\n};\n\nvar fetchUTXO = function fetchUTXO(testnet) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(txHash, vOut) {\n        var url, response, utxo;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(endpoint(testnet).replace(/\\/$/, \"\"), \"/transaction/details/\").concat(txHash);\n                _context.next = 3;\n                return axios_1.default.get(\"\".concat(url), {\n                  timeout: timeout_1.DEFAULT_TIMEOUT\n                });\n\n              case 3:\n                response = _context.sent;\n                utxo = response.data;\n                return _context.abrupt(\"return\", utxo_1.fixUTXO({\n                  txHash: txHash,\n                  amount: parseFloat(utxo.vout[vOut].value),\n                  // script_hex: utxo.scriptPubKey,\n                  vOut: vOut,\n                  confirmations: utxo.confirmations\n                }, 8));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar fetchConfirmations = function fetchConfirmations(testnet) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(txHash) {\n        var url, tx;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = \"\".concat(endpoint(testnet).replace(/\\/$/, \"\"), \"/transaction/details/\").concat(txHash);\n                _context2.next = 3;\n                return axios_1.default.get(\"\".concat(url), {\n                  timeout: timeout_1.DEFAULT_TIMEOUT\n                });\n\n              case 3:\n                tx = _context2.sent.data;\n                return _context2.abrupt(\"return\", tx.confirmations);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar fetchUTXOs = function fetchUTXOs(testnet) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(address, confirmations) {\n        var url, response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = \"\".concat(endpoint(testnet).replace(/\\/$/, \"\"), \"/address/utxo/\").concat(address);\n                _context3.next = 3;\n                return axios_1.default.get(url, {\n                  timeout: timeout_1.DEFAULT_TIMEOUT\n                });\n\n              case 3:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", utxo_1.fixUTXOs(response.data.utxos.map(function (utxo) {\n                  return {\n                    txHash: utxo.txid,\n                    amount: utxo.amount,\n                    // script_hex: utxo.scriptPubKey,\n                    vOut: utxo.vout,\n                    confirmations: utxo.confirmations\n                  };\n                }).filter(function (utxo) {\n                  return confirmations === 0 || utxo.confirmations >= confirmations;\n                }), 8).sort(utxo_1.sortUTXOs));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexports.broadcastTransaction = function (testnet) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(txHex) {\n        var url, response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = \"\".concat(endpoint(testnet).replace(/\\/$/, \"\"), \"/rawtransactions/sendRawTransaction\");\n                _context4.next = 3;\n                return axios_1.default.post(url, {\n                  hexes: [txHex]\n                }, {\n                  timeout: timeout_1.DEFAULT_TIMEOUT\n                });\n\n              case 3:\n                response = _context4.sent;\n\n                if (!response.data.error) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(response.data.error);\n\n              case 6:\n                return _context4.abrupt(\"return\", response.data[0]);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x6) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexports.BitcoinDotCom = {\n  fetchUTXO: fetchUTXO,\n  fetchUTXOs: fetchUTXOs,\n  fetchConfirmations: fetchConfirmations,\n  broadcastTransaction: exports.broadcastTransaction\n};","map":null,"metadata":{},"sourceType":"script"}