{"ast":null,"code":"import _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Callable, utilsWithChainNetwork } from \"@renproject/utils\";\nimport base58 from \"bs58\";\nimport { Insight } from \"./APIs/insight\";\nimport { BitcoinClass } from \"./bitcoin\";\nimport { createAddress, pubKeyScript } from \"./script\";\nimport { validateAddress } from \"./utils\";\nexport var DigiByteClass =\n/*#__PURE__*/\nfunction (_BitcoinClass) {\n  _inherits(DigiByteClass, _BitcoinClass);\n\n  function DigiByteClass() {\n    var _this;\n\n    _classCallCheck(this, DigiByteClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DigiByteClass).apply(this, arguments));\n    _this.chain = DigiByteClass.chain;\n    _this.name = DigiByteClass.chain; // APIs\n\n    _this.withDefaultAPIs = function (network) {\n      switch (network) {\n        case \"mainnet\":\n          // prettier-ignore\n          return _this.withAPI(Insight(\"https://multichain-web-proxy.herokuapp.com/digibyte-mainnet\")).withAPI(Insight(\"https://digiexplorer.info/api\")).withAPI(Insight(\"https://insight.digibyte.host/api\"));\n\n        case \"testnet\":\n          // prettier-ignore\n          return _this.withAPI(Insight(\"https://testnetexplorer.digibyteservers.io/api\"));\n\n        case \"regtest\":\n          throw new Error(\"Regtest is currently not supported.\");\n      }\n    };\n\n    _this.asset = DigiByteClass.asset;\n    _this.utils = utilsWithChainNetwork(DigiByteClass.utils, function () {\n      return _this.chainNetwork;\n    });\n    return _this;\n  }\n\n  return DigiByteClass;\n}(BitcoinClass);\nDigiByteClass.chain = \"DigiByte\";\nDigiByteClass.asset = \"DGB\";\nDigiByteClass.utils = {\n  resolveChainNetwork: BitcoinClass.utils.resolveChainNetwork,\n  p2shPrefix: {\n    // Source: https://github.com/digicontributer/digibyte-js/blob/27156cd1cb4430c4a4959f46e809629846694434/lib/networks.js\n    mainnet: Buffer.from([0x3f]),\n    testnet: Buffer.from([0x8c])\n  },\n  createAddress: createAddress(base58.encode),\n  calculatePubKeyScript: pubKeyScript(),\n  addressIsValid: function addressIsValid(address) {\n    var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"mainnet\";\n    return validateAddress(address, DigiByteClass.asset, DigiByte.utils.resolveChainNetwork(network));\n  },\n  addressExplorerLink: function addressExplorerLink(address) {\n    var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"mainnet\";\n\n    switch (DigiByte.utils.resolveChainNetwork(network)) {\n      case \"mainnet\":\n        return \"https://digiexplorer.info/address/\".concat(address);\n\n      case \"testnet\":\n        return \"https://testnetexplorer.digibyteservers.io/address/\".concat(address);\n\n      case \"regtest\":\n        return undefined;\n    }\n  },\n  transactionExplorerLink: function transactionExplorerLink(tx) {\n    var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"mainnet\";\n    var txHash = typeof tx === \"string\" ? tx : tx.txHash;\n\n    switch (DigiByte.utils.resolveChainNetwork(network)) {\n      case \"mainnet\":\n        return \"https://digiexplorer.info/tx/\".concat(txHash);\n\n      case \"testnet\":\n        return \"https://testnetexplorer.digibyteservers.io/tx/\".concat(txHash);\n\n      case \"regtest\":\n        return undefined;\n    }\n  }\n};\nexport var DigiByte = Callable(DigiByteClass);\nvar _ = DigiByte;","map":null,"metadata":{},"sourceType":"module"}