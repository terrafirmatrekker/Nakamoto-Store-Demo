{"ast":null,"code":"import _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Modified from web3-core-method\n\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file PromiEvent.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>, Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types */\nimport { EventEmitter } from \"events\";\nexport var InternalPromiEvent =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   */\n  function InternalPromiEvent() {\n    var _this = this;\n\n    _classCallCheck(this, InternalPromiEvent);\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    this._cancelled = false;\n    this.eventEmitter = new EventEmitter();\n    return new Proxy(this, {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      get: this.proxyHandler\n    });\n  }\n  /**\n   * Proxy handler to call the promise or eventEmitter methods\n   */\n\n\n  _createClass(InternalPromiEvent, [{\n    key: \"proxyHandler\",\n    value: function proxyHandler(target, name) {\n      var _this2 = this;\n\n      if (name === \"resolve\" || name === \"reject\") {\n        // eslint-disable-next-line security/detect-object-injection\n        return target[name];\n      }\n\n      if (name === \"then\") {\n        return target.promise.then.bind(target.promise);\n      }\n\n      if (name === \"catch\") {\n        return target.promise.catch.bind(target.promise);\n      }\n\n      if (name === \"_cancel\") {\n        return function () {\n          _this2._cancelled = true;\n        };\n      }\n\n      if (name === \"_isCancelled\") {\n        return function () {\n          return _this2._cancelled === true;\n        };\n      }\n\n      if (name === \"_resume\") {\n        return function () {\n          _this2._cancelled = false;\n        };\n      } // eslint-disable-next-line security/detect-object-injection, @typescript-eslint/no-unsafe-member-access\n\n\n      if (target.eventEmitter[name]) {\n        // eslint-disable-next-line security/detect-object-injection, @typescript-eslint/no-unsafe-member-access\n        return target.eventEmitter[name];\n      }\n\n      return;\n    }\n  }]);\n\n  return InternalPromiEvent;\n}();\nexport var newPromiEvent = function newPromiEvent() {\n  return new InternalPromiEvent();\n};","map":null,"metadata":{},"sourceType":"module"}