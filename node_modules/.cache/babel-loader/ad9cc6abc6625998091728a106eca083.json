{"ast":null,"code":"import { assertType, sha256 } from \"@renproject/utils\";\nimport { marshalString, marshalTypedPackValue } from \"./pack/marshal\";\nimport { PackPrimitive } from \"./pack/pack\";\nexport var burnParamsType = {\n  struct: [{\n    amount: PackPrimitive.U256\n  }, {\n    to: PackPrimitive.Str\n  }, {\n    nonce: PackPrimitive.Bytes32\n  }]\n};\nexport var mintParamsType = function mintParamsType() {\n  return {\n    struct: [{\n      txid: PackPrimitive.Bytes\n    }, {\n      txindex: PackPrimitive.U32\n    }, {\n      amount: PackPrimitive.U256\n    }, {\n      payload: PackPrimitive.Bytes\n    }, {\n      phash: PackPrimitive.Bytes32\n    }, {\n      to: PackPrimitive.Str\n    }, {\n      nonce: PackPrimitive.Bytes32\n    }, {\n      nhash: PackPrimitive.Bytes32\n    }, {\n      gpubkey: PackPrimitive.Bytes\n    }, {\n      ghash: PackPrimitive.Bytes32\n    }]\n  };\n};\nexport var hashTransaction = function hashTransaction(version, selector, packValue) {\n  assertType(\"string\", {\n    version: version,\n    selector: selector\n  });\n  return sha256(Buffer.concat([marshalString(version), marshalString(selector), marshalTypedPackValue(packValue)]));\n};","map":null,"metadata":{},"sourceType":"module"}