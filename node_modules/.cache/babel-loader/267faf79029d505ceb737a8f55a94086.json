{"ast":null,"code":"import _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _AvalancheConfigMap;\n\nimport { getRenNetworkDetails, RenNetwork } from \"@renproject/interfaces\";\nimport { Callable, utilsWithChainNetwork } from \"@renproject/utils\";\nimport { EthereumClass } from \"./ethereum\";\nimport { addressIsValid } from \"./utils\";\nexport var renAvalancheTestnet = {\n  name: \"Avalanche Testnet\",\n  chain: \"avalancheTestnet\",\n  isTestnet: true,\n  chainLabel: \"Avalanche Testnet\",\n  networkID: 80001,\n  infura: \"https://api.avax-test.network/ext/bc/C/rpc\",\n  etherscan: \"https://cchain.explorer.avax-test.network/\",\n  addresses: {\n    GatewayRegistry: \"0xD881213F5ABF783d93220e6bD3Cc21706A8dc1fC\",\n    BasicAdapter: \"0xD087b0540e172553c12DEEeCDEf3dFD21Ec02066\"\n  }\n};\nexport var renAvalancheMainnet = {\n  name: \"Avalanche Mainnet\",\n  chain: \"avalancheMainnet\",\n  isTestnet: false,\n  chainLabel: \"Avalanche Mainnet\",\n  networkID: 137,\n  infura: \"https://api.avax.network/ext/bc/C/rpc\",\n  etherscan: \"https://cchain.explorer.avax.network/\",\n  addresses: {\n    GatewayRegistry: \"0x21C482f153D0317fe85C60bE1F7fa079019fcEbD\",\n    BasicAdapter: \"0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5\"\n  }\n};\nexport var AvalancheConfigMap = (_AvalancheConfigMap = {}, _defineProperty(_AvalancheConfigMap, RenNetwork.TestnetVDot3, renAvalancheTestnet), _defineProperty(_AvalancheConfigMap, RenNetwork.MainnetVDot3, renAvalancheMainnet), _AvalancheConfigMap);\n\nvar resolveAvalancheNetwork = function resolveAvalancheNetwork(renNetwork) {\n  if (!renNetwork) {\n    return AvalancheConfigMap[RenNetwork.MainnetVDot3];\n  }\n\n  if (renNetwork.addresses) {\n    return renNetwork;\n  } else {\n    var details = getRenNetworkDetails(renNetwork);\n    return details.isTestnet ? renAvalancheTestnet : renAvalancheMainnet;\n  }\n};\n\nexport var AvalancheClass =\n/*#__PURE__*/\nfunction (_EthereumClass) {\n  _inherits(AvalancheClass, _EthereumClass);\n\n  function AvalancheClass(web3Provider, renNetwork) {\n    var _this;\n\n    _classCallCheck(this, AvalancheClass);\n\n    // To be compatible with the Ethereum chain class, the first parameter\n    // is a web3Provider and the second the RenVM network. However,\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AvalancheClass).call(this, web3Provider, resolveAvalancheNetwork(renNetwork)));\n    _this.chain = AvalancheClass.chain;\n    _this.name = AvalancheClass.chain;\n    _this.legacyName = undefined;\n    _this.utils = utilsWithChainNetwork(AvalancheClass.utils, function () {\n      return _this.renNetworkDetails;\n    });\n\n    _this.initialize = function (renNetwork) {\n      _this.renNetworkDetails = _this.renNetworkDetails || AvalancheConfigMap[getRenNetworkDetails(renNetwork).name];\n\n      if (!_this.renNetworkDetails) {\n        throw new Error(\"Unable to set \".concat(_this.name, \" network for RenVM network \").concat(getRenNetworkDetails(renNetwork).name, \". Please provide \").concat(_this.name, \" network details to \").concat(_this.name, \" constructor.\"));\n      }\n\n      return _assertThisInitialized(_assertThisInitialized(_this));\n    };\n\n    return _this;\n  }\n\n  return AvalancheClass;\n}(EthereumClass);\nAvalancheClass.chain = \"Avalanche\"; // public logRequestLimit = 1000;\n\nAvalancheClass.utils = {\n  resolveChainNetwork: resolveAvalancheNetwork,\n  addressIsValid: addressIsValid,\n  addressExplorerLink: function addressExplorerLink(address, network) {\n    return \"\".concat((Avalanche.utils.resolveChainNetwork(network) || renAvalancheMainnet).etherscan, \"/address/\").concat(address);\n  },\n  transactionExplorerLink: function transactionExplorerLink(transaction, network) {\n    return \"\".concat((Avalanche.utils.resolveChainNetwork(network) || renAvalancheMainnet).etherscan, \"/tx/\").concat(transaction);\n  }\n}; // @dev Removes any static fields, except `utils`.\n\nexport var Avalanche = Callable(AvalancheClass);","map":null,"metadata":{},"sourceType":"module"}