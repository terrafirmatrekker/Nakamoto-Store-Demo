{"ast":null,"code":"/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n'use strict';\n\n(function (I) {\n  function w(c, a, d) {\n    var l = 0,\n        b = [],\n        g = 0,\n        f,\n        n,\n        k,\n        e,\n        h,\n        q,\n        y,\n        p,\n        m = !1,\n        t = [],\n        r = [],\n        u,\n        z = !1;\n    d = d || {};\n    f = d.encoding || \"UTF8\";\n    u = d.numRounds || 1;\n    if (u !== parseInt(u, 10) || 1 > u) throw Error(\"numRounds must a integer >= 1\");\n    if (0 === c.lastIndexOf(\"SHA-\", 0)) {\n      if (q = function q(b, a) {\n        return A(b, a, c);\n      }, y = function y(b, a, l, f) {\n        var g, e;\n        if (\"SHA-224\" === c || \"SHA-256\" === c) g = (a + 65 >>> 9 << 4) + 15, e = 16;else throw Error(\"Unexpected error in SHA-2 implementation\");\n\n        for (; b.length <= g;) {\n          b.push(0);\n        }\n\n        b[a >>> 5] |= 128 << 24 - a % 32;\n        a = a + l;\n        b[g] = a & 4294967295;\n        b[g - 1] = a / 4294967296 | 0;\n        l = b.length;\n\n        for (a = 0; a < l; a += e) {\n          f = A(b.slice(a, a + e), f, c);\n        }\n\n        if (\"SHA-224\" === c) b = [f[0], f[1], f[2], f[3], f[4], f[5], f[6]];else if (\"SHA-256\" === c) b = f;else throw Error(\"Unexpected error in SHA-2 implementation\");\n        return b;\n      }, p = function p(b) {\n        return b.slice();\n      }, \"SHA-224\" === c) h = 512, e = 224;else if (\"SHA-256\" === c) h = 512, e = 256;else throw Error(\"Chosen SHA variant is not supported\");\n    } else throw Error(\"Chosen SHA variant is not supported\");\n    k = B(a, f);\n    n = x(c);\n\n    this.setHMACKey = function (b, a, g) {\n      var e;\n      if (!0 === m) throw Error(\"HMAC key already set\");\n      if (!0 === z) throw Error(\"Cannot set HMAC key after calling update\");\n      f = (g || {}).encoding || \"UTF8\";\n      a = B(a, f)(b);\n      b = a.binLen;\n      a = a.value;\n      e = h >>> 3;\n      g = e / 4 - 1;\n\n      if (e < b / 8) {\n        for (a = y(a, b, 0, x(c)); a.length <= g;) {\n          a.push(0);\n        }\n\n        a[g] &= 4294967040;\n      } else if (e > b / 8) {\n        for (; a.length <= g;) {\n          a.push(0);\n        }\n\n        a[g] &= 4294967040;\n      }\n\n      for (b = 0; b <= g; b += 1) {\n        t[b] = a[b] ^ 909522486, r[b] = a[b] ^ 1549556828;\n      }\n\n      n = q(t, n);\n      l = h;\n      m = !0;\n    };\n\n    this.update = function (a) {\n      var c,\n          f,\n          e,\n          d = 0,\n          p = h >>> 5;\n      c = k(a, b, g);\n      a = c.binLen;\n      f = c.value;\n      c = a >>> 5;\n\n      for (e = 0; e < c; e += p) {\n        d + h <= a && (n = q(f.slice(e, e + p), n), d += h);\n      }\n\n      l += d;\n      b = f.slice(d >>> 5);\n      g = a % h;\n      z = !0;\n    };\n\n    this.getHash = function (a, f) {\n      var d, h, k, q;\n      if (!0 === m) throw Error(\"Cannot call getHash after setting HMAC key\");\n      k = C(f);\n\n      switch (a) {\n        case \"HEX\":\n          d = function d(a) {\n            return D(a, e, k);\n          };\n\n          break;\n\n        case \"B64\":\n          d = function d(a) {\n            return E(a, e, k);\n          };\n\n          break;\n\n        case \"BYTES\":\n          d = function d(a) {\n            return F(a, e);\n          };\n\n          break;\n\n        case \"ARRAYBUFFER\":\n          try {\n            h = new ArrayBuffer(0);\n          } catch (v) {\n            throw Error(\"ARRAYBUFFER not supported by this environment\");\n          }\n\n          d = function d(a) {\n            return G(a, e);\n          };\n\n          break;\n\n        default:\n          throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");\n      }\n\n      q = y(b.slice(), g, l, p(n));\n\n      for (h = 1; h < u; h += 1) {\n        q = y(q, e, 0, x(c));\n      }\n\n      return d(q);\n    };\n\n    this.getHMAC = function (a, f) {\n      var d, k, t, u;\n      if (!1 === m) throw Error(\"Cannot call getHMAC without first setting HMAC key\");\n      t = C(f);\n\n      switch (a) {\n        case \"HEX\":\n          d = function d(a) {\n            return D(a, e, t);\n          };\n\n          break;\n\n        case \"B64\":\n          d = function d(a) {\n            return E(a, e, t);\n          };\n\n          break;\n\n        case \"BYTES\":\n          d = function d(a) {\n            return F(a, e);\n          };\n\n          break;\n\n        case \"ARRAYBUFFER\":\n          try {\n            d = new ArrayBuffer(0);\n          } catch (v) {\n            throw Error(\"ARRAYBUFFER not supported by this environment\");\n          }\n\n          d = function d(a) {\n            return G(a, e);\n          };\n\n          break;\n\n        default:\n          throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n      }\n\n      k = y(b.slice(), g, l, p(n));\n      u = q(r, x(c));\n      u = y(k, e, h, u);\n      return d(u);\n    };\n  }\n\n  function m() {}\n\n  function D(c, a, d) {\n    var l = \"\";\n    a /= 8;\n    var b, g;\n\n    for (b = 0; b < a; b += 1) {\n      g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1), l += \"0123456789abcdef\".charAt(g >>> 4 & 15) + \"0123456789abcdef\".charAt(g & 15);\n    }\n\n    return d.outputUpper ? l.toUpperCase() : l;\n  }\n\n  function E(c, a, d) {\n    var l = \"\",\n        b = a / 8,\n        g,\n        f,\n        n;\n\n    for (g = 0; g < b; g += 3) {\n      for (f = g + 1 < b ? c[g + 1 >>> 2] : 0, n = g + 2 < b ? c[g + 2 >>> 2] : 0, n = (c[g >>> 2] >>> 8 * (3 + g % 4 * -1) & 255) << 16 | (f >>> 8 * (3 + (g + 1) % 4 * -1) & 255) << 8 | n >>> 8 * (3 + (g + 2) % 4 * -1) & 255, f = 0; 4 > f; f += 1) {\n        8 * g + 6 * f <= a ? l += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(n >>> 6 * (3 - f) & 63) : l += d.b64Pad;\n      }\n    }\n\n    return l;\n  }\n\n  function F(c, a) {\n    var d = \"\",\n        l = a / 8,\n        b,\n        g;\n\n    for (b = 0; b < l; b += 1) {\n      g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1) & 255, d += String.fromCharCode(g);\n    }\n\n    return d;\n  }\n\n  function G(c, a) {\n    var d = a / 8,\n        l,\n        b = new ArrayBuffer(d),\n        g;\n    g = new Uint8Array(b);\n\n    for (l = 0; l < d; l += 1) {\n      g[l] = c[l >>> 2] >>> 8 * (3 + l % 4 * -1) & 255;\n    }\n\n    return b;\n  }\n\n  function C(c) {\n    var a = {\n      outputUpper: !1,\n      b64Pad: \"=\",\n      shakeLen: -1\n    };\n    c = c || {};\n    a.outputUpper = c.outputUpper || !1;\n    !0 === c.hasOwnProperty(\"b64Pad\") && (a.b64Pad = c.b64Pad);\n    if (\"boolean\" !== typeof a.outputUpper) throw Error(\"Invalid outputUpper formatting option\");\n    if (\"string\" !== typeof a.b64Pad) throw Error(\"Invalid b64Pad formatting option\");\n    return a;\n  }\n\n  function B(c, a) {\n    var d;\n\n    switch (a) {\n      case \"UTF8\":\n      case \"UTF16BE\":\n      case \"UTF16LE\":\n        break;\n\n      default:\n        throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n    }\n\n    switch (c) {\n      case \"HEX\":\n        d = function d(a, b, c) {\n          var f = a.length,\n              d,\n              k,\n              e,\n              h,\n              q;\n          if (0 !== f % 2) throw Error(\"String of HEX type must be in byte increments\");\n          b = b || [0];\n          c = c || 0;\n          q = c >>> 3;\n\n          for (d = 0; d < f; d += 2) {\n            k = parseInt(a.substr(d, 2), 16);\n            if (isNaN(k)) throw Error(\"String of HEX type contains invalid characters\");\n            h = (d >>> 1) + q;\n\n            for (e = h >>> 2; b.length <= e;) {\n              b.push(0);\n            }\n\n            b[e] |= k << 8 * (3 + h % 4 * -1);\n          }\n\n          return {\n            value: b,\n            binLen: 4 * f + c\n          };\n        };\n\n        break;\n\n      case \"TEXT\":\n        d = function d(c, b, _d) {\n          var f,\n              n,\n              k = 0,\n              e,\n              h,\n              q,\n              m,\n              p,\n              r;\n          b = b || [0];\n          _d = _d || 0;\n          q = _d >>> 3;\n          if (\"UTF8\" === a) for (r = 3, e = 0; e < c.length; e += 1) {\n            for (f = c.charCodeAt(e), n = [], 128 > f ? n.push(f) : 2048 > f ? (n.push(192 | f >>> 6), n.push(128 | f & 63)) : 55296 > f || 57344 <= f ? n.push(224 | f >>> 12, 128 | f >>> 6 & 63, 128 | f & 63) : (e += 1, f = 65536 + ((f & 1023) << 10 | c.charCodeAt(e) & 1023), n.push(240 | f >>> 18, 128 | f >>> 12 & 63, 128 | f >>> 6 & 63, 128 | f & 63)), h = 0; h < n.length; h += 1) {\n              p = k + q;\n\n              for (m = p >>> 2; b.length <= m;) {\n                b.push(0);\n              }\n\n              b[m] |= n[h] << 8 * (r + p % 4 * -1);\n              k += 1;\n            }\n          } else if (\"UTF16BE\" === a || \"UTF16LE\" === a) for (r = 2, n = \"UTF16LE\" === a && !0 || \"UTF16LE\" !== a && !1, e = 0; e < c.length; e += 1) {\n            f = c.charCodeAt(e);\n            !0 === n && (h = f & 255, f = h << 8 | f >>> 8);\n            p = k + q;\n\n            for (m = p >>> 2; b.length <= m;) {\n              b.push(0);\n            }\n\n            b[m] |= f << 8 * (r + p % 4 * -1);\n            k += 2;\n          }\n          return {\n            value: b,\n            binLen: 8 * k + _d\n          };\n        };\n\n        break;\n\n      case \"B64\":\n        d = function d(a, b, c) {\n          var f = 0,\n              d,\n              k,\n              e,\n              h,\n              q,\n              m,\n              p;\n          if (-1 === a.search(/^[a-zA-Z0-9=+\\/]+$/)) throw Error(\"Invalid character in base-64 string\");\n          k = a.indexOf(\"=\");\n          a = a.replace(/\\=/g, \"\");\n          if (-1 !== k && k < a.length) throw Error(\"Invalid '=' found in base-64 string\");\n          b = b || [0];\n          c = c || 0;\n          m = c >>> 3;\n\n          for (k = 0; k < a.length; k += 4) {\n            q = a.substr(k, 4);\n\n            for (e = h = 0; e < q.length; e += 1) {\n              d = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[e]), h |= d << 18 - 6 * e;\n            }\n\n            for (e = 0; e < q.length - 1; e += 1) {\n              p = f + m;\n\n              for (d = p >>> 2; b.length <= d;) {\n                b.push(0);\n              }\n\n              b[d] |= (h >>> 16 - 8 * e & 255) << 8 * (3 + p % 4 * -1);\n              f += 1;\n            }\n          }\n\n          return {\n            value: b,\n            binLen: 8 * f + c\n          };\n        };\n\n        break;\n\n      case \"BYTES\":\n        d = function d(a, b, c) {\n          var d, n, k, e, h;\n          b = b || [0];\n          c = c || 0;\n          k = c >>> 3;\n\n          for (n = 0; n < a.length; n += 1) {\n            d = a.charCodeAt(n), h = n + k, e = h >>> 2, b.length <= e && b.push(0), b[e] |= d << 8 * (3 + h % 4 * -1);\n          }\n\n          return {\n            value: b,\n            binLen: 8 * a.length + c\n          };\n        };\n\n        break;\n\n      case \"ARRAYBUFFER\":\n        try {\n          d = new ArrayBuffer(0);\n        } catch (l) {\n          throw Error(\"ARRAYBUFFER not supported by this environment\");\n        }\n\n        d = function d(a, b, c) {\n          var d, n, k, e, h;\n          b = b || [0];\n          c = c || 0;\n          n = c >>> 3;\n          h = new Uint8Array(a);\n\n          for (d = 0; d < a.byteLength; d += 1) {\n            e = d + n, k = e >>> 2, b.length <= k && b.push(0), b[k] |= h[d] << 8 * (3 + e % 4 * -1);\n          }\n\n          return {\n            value: b,\n            binLen: 8 * a.byteLength + c\n          };\n        };\n\n        break;\n\n      default:\n        throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");\n    }\n\n    return d;\n  }\n\n  function r(c, a) {\n    return c >>> a | c << 32 - a;\n  }\n\n  function J(c, a, d) {\n    return c & a ^ ~c & d;\n  }\n\n  function K(c, a, d) {\n    return c & a ^ c & d ^ a & d;\n  }\n\n  function L(c) {\n    return r(c, 2) ^ r(c, 13) ^ r(c, 22);\n  }\n\n  function M(c) {\n    return r(c, 6) ^ r(c, 11) ^ r(c, 25);\n  }\n\n  function N(c) {\n    return r(c, 7) ^ r(c, 18) ^ c >>> 3;\n  }\n\n  function O(c) {\n    return r(c, 17) ^ r(c, 19) ^ c >>> 10;\n  }\n\n  function P(c, a) {\n    var d = (c & 65535) + (a & 65535);\n    return ((c >>> 16) + (a >>> 16) + (d >>> 16) & 65535) << 16 | d & 65535;\n  }\n\n  function Q(c, a, d, l) {\n    var b = (c & 65535) + (a & 65535) + (d & 65535) + (l & 65535);\n    return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) & 65535) << 16 | b & 65535;\n  }\n\n  function R(c, a, d, l, b) {\n    var g = (c & 65535) + (a & 65535) + (d & 65535) + (l & 65535) + (b & 65535);\n    return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) + (g >>> 16) & 65535) << 16 | g & 65535;\n  }\n\n  function x(c) {\n    var a = [],\n        d;\n    if (0 === c.lastIndexOf(\"SHA-\", 0)) switch (a = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428], d = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], c) {\n      case \"SHA-224\":\n        break;\n\n      case \"SHA-256\":\n        a = d;\n        break;\n\n      case \"SHA-384\":\n        a = [new m(), new m(), new m(), new m(), new m(), new m(), new m(), new m()];\n        break;\n\n      case \"SHA-512\":\n        a = [new m(), new m(), new m(), new m(), new m(), new m(), new m(), new m()];\n        break;\n\n      default:\n        throw Error(\"Unknown SHA variant\");\n    } else throw Error(\"No SHA variants supported\");\n    return a;\n  }\n\n  function A(c, a, d) {\n    var l,\n        b,\n        g,\n        f,\n        n,\n        k,\n        e,\n        h,\n        m,\n        r,\n        p,\n        w,\n        t,\n        x,\n        u,\n        z,\n        A,\n        B,\n        C,\n        D,\n        E,\n        F,\n        v = [],\n        G;\n    if (\"SHA-224\" === d || \"SHA-256\" === d) r = 64, w = 1, F = Number, t = P, x = Q, u = R, z = N, A = O, B = L, C = M, E = K, D = J, G = H;else throw Error(\"Unexpected error in SHA-2 implementation\");\n    d = a[0];\n    l = a[1];\n    b = a[2];\n    g = a[3];\n    f = a[4];\n    n = a[5];\n    k = a[6];\n    e = a[7];\n\n    for (p = 0; p < r; p += 1) {\n      16 > p ? (m = p * w, h = c.length <= m ? 0 : c[m], m = c.length <= m + 1 ? 0 : c[m + 1], v[p] = new F(h, m)) : v[p] = x(A(v[p - 2]), v[p - 7], z(v[p - 15]), v[p - 16]), h = u(e, C(f), D(f, n, k), G[p], v[p]), m = t(B(d), E(d, l, b)), e = k, k = n, n = f, f = t(g, h), g = b, b = l, l = d, d = t(h, m);\n    }\n\n    a[0] = t(d, a[0]);\n    a[1] = t(l, a[1]);\n    a[2] = t(b, a[2]);\n    a[3] = t(g, a[3]);\n    a[4] = t(f, a[4]);\n    a[5] = t(n, a[5]);\n    a[6] = t(k, a[6]);\n    a[7] = t(e, a[7]);\n    return a;\n  }\n\n  var H;\n  H = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];\n  \"function\" === typeof define && define.amd ? define(function () {\n    return w;\n  }) : \"undefined\" !== typeof exports ? (\"undefined\" !== typeof module && module.exports && (module.exports = w), exports = w) : I.jsSHA = w;\n})(this);","map":null,"metadata":{},"sourceType":"script"}