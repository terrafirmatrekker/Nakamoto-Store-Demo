{"ast":null,"code":"/*\n\nThe values for the various fork coins can be found in these files:\n\nproperty       filename             varname                           notes\n------------------------------------------------------------------------------------------------------------------------\nmessagePrefix  src/validation.cpp   strMessageMagic                   Format `${CoinName} Signed Message`\nbech32_hrp     src/chainparams.cpp  bech32_hrp                        Only for some networks\nbip32.public   src/chainparams.cpp  base58Prefixes[EXT_PUBLIC_KEY]    Mainnets have same value, testnets have same value\nbip32.private  src/chainparams.cpp  base58Prefixes[EXT_SECRET_KEY]    Mainnets have same value, testnets have same value\npubKeyHash     src/chainparams.cpp  base58Prefixes[PUBKEY_ADDRESS]\nscriptHash     src/chainparams.cpp  base58Prefixes[SCRIPT_ADDRESS]\nwif            src/chainparams.cpp  base58Prefixes[SECRET_KEY]        Testnets have same value\n\n*/\nvar coins = {\n  BCH: 'bch',\n  BSV: 'bsv',\n  BTC: 'btc',\n  BTG: 'btg',\n  LTC: 'ltc',\n  ZEC: 'zec',\n  DASH: 'dash'\n};\n\nfunction getDefaultBip32Mainnet() {\n  return {\n    // base58 'xpub'\n    public: 0x0488b21e,\n    // base58 'xprv'\n    private: 0x0488ade4\n  };\n}\n\nfunction getDefaultBip32Testnet() {\n  return {\n    // base58 'tpub'\n    public: 0x043587cf,\n    // base58 'tprv'\n    private: 0x04358394\n  };\n}\n\nmodule.exports = {\n  // https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp\n  // https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n  bitcoin: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BTC\n  },\n  testnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'tb',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BTC\n  },\n  // https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/validation.cpp\n  // https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/chainparams.cpp\n  bitcoincash: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BCH,\n    forkId: 0x00\n  },\n  bitcoincashTestnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BCH\n  },\n  // https://github.com/BTCGPU/BTCGPU/blob/master/src/validation.cpp\n  // https://github.com/BTCGPU/BTCGPU/blob/master/src/chainparams.cpp\n  bitcoingold: {\n    messagePrefix: '\\x18Bitcoin Gold Signed Message:\\n',\n    bech32: 'btg',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x26,\n    scriptHash: 0x17,\n    wif: 0x80,\n    coin: coins.BTG,\n    forkId: 0x4F\n    /* 79 */\n\n  },\n  // bitcoingoldTest: TODO\n  // https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/validation.cpp\n  // https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/chainparams.cpp\n  bitcoinsv: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BSV,\n    forkId: 0x00\n  },\n  bitcoinsvTestnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BSV\n  },\n  // https://github.com/dashpay/dash/blob/master/src/validation.cpp\n  // https://github.com/dashpay/dash/blob/master/src/chainparams.cpp\n  dash: {\n    messagePrefix: '\\x19DarkCoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x4c,\n    scriptHash: 0x10,\n    wif: 0xcc,\n    coin: coins.DASH\n  },\n  dashTest: {\n    messagePrefix: '\\x19DarkCoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x8c,\n    scriptHash: 0x13,\n    wif: 0xef,\n    coin: coins.DASH\n  },\n  // https://github.com/litecoin-project/litecoin/blob/master/src/validation.cpp\n  // https://github.com/litecoin-project/litecoin/blob/master/src/chainparams.cpp\n  litecoin: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bech32: 'ltc',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x30,\n    scriptHash: 0x32,\n    wif: 0xb0,\n    coin: coins.LTC\n  },\n  litecoinTest: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bech32: 'tltc',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0x3a,\n    wif: 0xef,\n    coin: coins.LTC\n  },\n  // https://github.com/zcash/zcash/blob/master/src/validation.cpp\n  // https://github.com/zcash/zcash/blob/master/src/chainparams.cpp\n  zcash: {\n    messagePrefix: '\\x18ZCash Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x1cb8,\n    scriptHash: 0x1cbd,\n    wif: 0x80,\n    // This parameter was introduced in version 3 to allow soft forks, for version 1 and 2 transactions we add a\n    // dummy value.\n    consensusBranchId: {\n      1: 0x00,\n      2: 0x00,\n      3: 0x5ba81b19,\n      // 4: 0x76b809bb (old Sapling branch id). Blossom branch id becomes effective after block 653600\n      4: 0x2bb40e60\n    },\n    coin: coins.ZEC\n  },\n  zcashTest: {\n    messagePrefix: '\\x18ZCash Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x1d25,\n    scriptHash: 0x1cba,\n    wif: 0xef,\n    consensusBranchId: {\n      1: 0x00,\n      2: 0x00,\n      3: 0x5ba81b19,\n      // 4: 0x76b809bb (old Sapling branch id)\n      4: 0x2bb40e60\n    },\n    coin: coins.ZEC\n  }\n};","map":null,"metadata":{},"sourceType":"script"}