{"ast":null,"code":"import _toConsumableArray from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tejas/Desktop/marketplace/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport logo from \"../logo.png\";\nimport \"./App.css\";\nimport Marketplace from \"../abis/Marketplace.json\";\nimport ABI from \"../abis/ABI.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\"; // class dapp extends React.Component {\n//   render() {\n//     return  (\n//       <div className=\"bridge\">test\n//       <Renapp /></div>\n//     )\n//   }\n// }\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, marketplace, productCount, i, product;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Marketplace.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                marketplace = web3.eth.Contract(Marketplace.abi, networkData.address);\n                this.setState({\n                  marketplace: marketplace\n                });\n                _context3.next = 14;\n                return marketplace.methods.productCount().call();\n\n              case 14:\n                productCount = _context3.sent;\n                this.setState({\n                  productCount: productCount\n                }); // Load products\n\n                i = 1;\n\n              case 17:\n                if (!(i <= productCount)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return marketplace.methods.products(i).call();\n\n              case 20:\n                product = _context3.sent;\n                this.setState({\n                  products: [].concat(_toConsumableArray(this.state.products), [product])\n                });\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                this.setState({\n                  loading: false\n                });\n                _context3.next = 29;\n                break;\n\n              case 28:\n                window.alert(\"Marketplace contract not deployed to detected network.\");\n\n              case 29:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      productCount: 0,\n      products: [],\n      loading: true\n    };\n    _this.createProduct = _this.createProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.purchaseProduct = _this.purchaseProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createProduct\",\n    value: function createProduct(name, price) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.marketplace.methods.createProduct(name, price).send({\n        from: this.state.account\n      }).once(\"receipt\", function (receipt) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"purchaseProduct\",\n    value: function purchaseProduct(id, price) {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.marketplace.methods.purchaseProduct(id).send({\n        from: this.state.account,\n        value: price\n      }).once(\"receipt\", function (receipt) {\n        _this3.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        products: this.state.products,\n        createProduct: this.createProduct,\n        purchaseProduct: this.purchaseProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component); // Replace with your contract's address.\n\n\nvar contractAddress = \"0x4EaFf0d9Ce1c01910a1C4AeC87399A4caEc0a0Dd\";\n\nvar Dapp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dapp, _React$Component);\n\n  function Dapp(props) {\n    var _this4;\n\n    _classCallCheck(this, Dapp);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Dapp).call(this, props));\n    _this4.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var web3Provider, web3, networkID;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context4.next = 13;\n                break;\n              }\n\n              web3Provider = window.ethereum;\n              _context4.prev = 2;\n              _context4.next = 5;\n              return window.ethereum.enable();\n\n            case 5:\n              _context4.next = 11;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](2);\n\n              // User denied account access...\n              _this4.logError(\"Please allow access to your Web3 wallet.\");\n\n              return _context4.abrupt(\"return\");\n\n            case 11:\n              _context4.next = 19;\n              break;\n\n            case 13:\n              if (!window.web3) {\n                _context4.next = 17;\n                break;\n              }\n\n              web3Provider = window.web3.currentProvider;\n              _context4.next = 19;\n              break;\n\n            case 17:\n              _this4.logError(\"Please install MetaMask!\");\n\n              return _context4.abrupt(\"return\");\n\n            case 19:\n              web3 = new Web3(web3Provider);\n              _context4.next = 22;\n              return web3.eth.net.getId();\n\n            case 22:\n              networkID = _context4.sent;\n\n              if (!(networkID !== 42)) {\n                _context4.next = 26;\n                break;\n              }\n\n              _this4.logError(\"Please set your network to Kovan.\");\n\n              return _context4.abrupt(\"return\");\n\n            case 26:\n              _this4.setState({\n                web3: web3\n              }, function () {\n                // Update balances immediately and every 10 seconds\n                _this4.updateBalance();\n\n                setInterval(function () {\n                  _this4.updateBalance();\n                }, 10 * 1000);\n              });\n\n            case 27:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 7]]);\n    }));\n\n    _this4.render = function () {\n      var _this4$state = _this4.state,\n          balance = _this4$state.balance,\n          message = _this4$state.message,\n          error = _this4$state.error;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Balance: \", balance, \" BTC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this4.deposit().catch(_this4.logError);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Deposit 0.003 BTC\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this4.withdraw().catch(_this4.logError);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Withdraw \", balance, \" BTC\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, message), error ? React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, error) : null);\n    };\n\n    _this4.updateBalance =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var web3, contract, balance;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              web3 = _this4.state.web3;\n              contract = new web3.eth.Contract(ABI, contractAddress);\n              _context5.next = 4;\n              return contract.methods.balance().call();\n\n            case 4:\n              balance = _context5.sent;\n\n              _this4.setState({\n                balance: parseInt(balance.toString()) / Math.pow(10, 8)\n              });\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this4.logError = function (error) {\n      console.error(error);\n\n      _this4.setState({\n        error: String((error || {}).message || error)\n      });\n    };\n\n    _this4.log = function (message) {\n      _this4.setState({\n        message: message\n      });\n    };\n\n    _this4.deposit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var _this4$state2, web3, renJS, amount, mint;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _this4.logError(\"\"); // Reset error\n\n\n              _this4$state2 = _this4.state, web3 = _this4$state2.web3, renJS = _this4$state2.renJS;\n              amount = 0.003; // BTC\n\n              _context7.next = 5;\n              return renJS.lockAndMint({\n                // Send BTC from the Bitcoin blockchain to the Ethereum blockchain.\n                asset: \"BTC\",\n                from: Bitcoin(),\n                to: Ethereum(web3.currentProvider).Contract({\n                  // The contract we want to interact with\n                  sendTo: contractAddress,\n                  // The name of the function we want to call\n                  contractFn: \"deposit\",\n                  // Arguments expected for calling `deposit`\n                  contractParams: [{\n                    name: \"_msg\",\n                    type: \"bytes\",\n                    value: Buffer.from(\"Depositing \".concat(amount, \" BTC\"))\n                  }]\n                })\n              });\n\n            case 5:\n              mint = _context7.sent;\n\n              // Show the gateway address to the user so that they can transfer their BTC to it.\n              _this4.log(\"Deposit \".concat(amount, \" BTC to \").concat(mint.gatewayAddress));\n\n              mint.on(\"deposit\",\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee6(deposit) {\n                  var hash, depositLog;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          // Details of the deposit are available from `deposit.depositDetails`.\n                          hash = deposit.txHash();\n\n                          depositLog = function depositLog(msg) {\n                            return _this4.log(\"[\".concat(hash.slice(0, 8), \"][\").concat(deposit.status, \"] \").concat(msg));\n                          };\n\n                          _context6.next = 4;\n                          return deposit.confirmed().on(\"target\", function (confs, target) {\n                            return depositLog(\"\".concat(confs, \"/\").concat(target, \" confirmations\"));\n                          }).on(\"confirmation\", function (confs, target) {\n                            return depositLog(\"\".concat(confs, \"/\").concat(target, \" confirmations\"));\n                          });\n\n                        case 4:\n                          _context6.next = 6;\n                          return deposit.signed() // Print RenVM status - \"pending\", \"confirming\" or \"done\".\n                          .on(\"status\", function (status) {\n                            return depositLog(\"Status: \".concat(status));\n                          });\n\n                        case 6:\n                          _context6.next = 8;\n                          return deposit.mint() // Print Ethereum transaction hash.\n                          .on(\"transactionHash\", function (txHash) {\n                            return depositLog(\"Mint tx: \".concat(txHash));\n                          });\n\n                        case 8:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function (_x) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n\n              _this4.log(\"Deposited \".concat(amount, \" BTC.\"));\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    _this4.withdraw =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8() {\n      var _this4$state3, web3, renJS, balance, recipient, amount, burnAndRelease, confirmations;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this4.logError(\"\"); // Reset error\n\n\n              _this4$state3 = _this4.state, web3 = _this4$state3.web3, renJS = _this4$state3.renJS, balance = _this4$state3.balance;\n              recipient = prompt(\"Enter BTC recipient:\");\n              amount = balance;\n              _context8.next = 6;\n              return renJS.burnAndRelease({\n                // Send BTC from Ethereum back to the Bitcoin blockchain.\n                asset: \"BTC\",\n                to: Bitcoin().Address(recipient),\n                from: Ethereum(web3.currentProvider).Contract(function (btcAddress) {\n                  return {\n                    sendTo: contractAddress,\n                    contractFn: \"withdraw\",\n                    contractParams: [{\n                      type: \"bytes\",\n                      name: \"_msg\",\n                      value: Buffer.from(\"Withdrawing \".concat(amount, \" BTC\"))\n                    }, {\n                      type: \"bytes\",\n                      name: \"_to\",\n                      value: Buffer.from(btcAddress)\n                    }, {\n                      type: \"uint256\",\n                      name: \"_amount\",\n                      value: RenJS.utils.toSmallestUnit(amount, 8)\n                    }]\n                  };\n                })\n              });\n\n            case 6:\n              burnAndRelease = _context8.sent;\n              confirmations = 0;\n              _context8.next = 10;\n              return burnAndRelease.burn() // Ethereum transaction confirmations.\n              .on(\"confirmation\", function (confs) {\n                confirmations = confs;\n              }) // Print Ethereum transaction hash.\n              .on(\"transactionHash\", function (txHash) {\n                return _this4.log(\"txHash: \".concat(String(txHash)));\n              });\n\n            case 10:\n              _context8.next = 12;\n              return burnAndRelease.release() // Print RenVM status - \"pending\", \"confirming\" or \"done\".\n              .on(\"status\", function (status) {\n                return status === \"confirming\" ? _this4.log(\"\".concat(status, \" (\").concat(confirmations, \"/15)\")) : _this4.log(status);\n              }) // Print RenVM transaction hash\n              .on(\"txHash\", _this4.log);\n\n            case 12:\n              _this4.log(\"Withdrew \".concat(amount, \" BTC to \").concat(recipient, \".\"));\n\n            case 13:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    _this4.state = {\n      balance: 0,\n      message: \"\",\n      error: \"\",\n      renJS: new RenJS(\"testnet\")\n    };\n    return _this4;\n  }\n\n  return Dapp;\n}(React.Component);\n\nexport { App, Dapp };","map":{"version":3,"sources":["/Users/tejas/Desktop/marketplace/src/components/App.js"],"names":["React","Component","Web3","logo","Marketplace","ABI","Navbar","Main","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","marketplace","Contract","abi","address","methods","productCount","call","i","products","product","state","loading","props","createProduct","bind","purchaseProduct","name","price","send","from","once","receipt","id","value","contractAddress","Dapp","componentDidMount","web3Provider","logError","networkID","updateBalance","setInterval","render","balance","message","error","deposit","catch","withdraw","color","contract","parseInt","toString","console","String","log","renJS","amount","lockAndMint","asset","Bitcoin","to","Ethereum","sendTo","contractFn","contractParams","type","Buffer","mint","gatewayAddress","on","hash","txHash","depositLog","msg","slice","status","confirmed","confs","target","signed","recipient","prompt","burnAndRelease","Address","btcAddress","RenJS","utils","toSmallestUnit","confirmations","burn","release"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport logo from \"../logo.png\";\nimport \"./App.css\";\nimport Marketplace from \"../abis/Marketplace.json\";\nimport ABI from \"../abis/ABI.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\n// class dapp extends React.Component {\n//   render() {\n//     return  (\n//       <div className=\"bridge\">test\n//       <Renapp /></div>\n//     )\n//   }\n// }\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Marketplace.networks[networkId];\n    if (networkData) {\n      const marketplace = web3.eth.Contract(\n        Marketplace.abi,\n        networkData.address\n      );\n      this.setState({ marketplace });\n      const productCount = await marketplace.methods.productCount().call();\n      this.setState({ productCount });\n      // Load products\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call();\n        this.setState({\n          products: [...this.state.products, product],\n        });\n      }\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Marketplace contract not deployed to detected network.\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      productCount: 0,\n      products: [],\n      loading: true,\n    };\n\n    this.createProduct = this.createProduct.bind(this);\n    this.purchaseProduct = this.purchaseProduct.bind(this);\n  }\n\n  createProduct(name, price) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods\n      .createProduct(name, price)\n      .send({ from: this.state.account })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods\n      .purchaseProduct(id)\n      .send({ from: this.state.account, value: price })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.account} />\n        <div className=\"container mt-5\"> \n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              {this.state.loading ? (\n                <div id=\"loader\" className=\"text-center\">\n                  <p className=\"text-center\">Loading...</p>\n                </div>\n              ) : (\n                <Main\n                  products={this.state.products}\n                  createProduct={this.createProduct}\n                  purchaseProduct={this.purchaseProduct}\n                />\n              )}\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n    }\n  }\n\n\n// Replace with your contract's address.\nconst contractAddress = \"0x4EaFf0d9Ce1c01910a1C4AeC87399A4caEc0a0Dd\";\n\nclass Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      balance: 0,\n      message: \"\",\n      error: \"\",\n      renJS: new RenJS(\"testnet\"),\n    }\n  }\n\n  componentDidMount = async () => {\n    let web3Provider;\n\n    // Initialize web3 (https://medium.com/coinmonks/web3-js-ethereum-javascript-api-72f7b22e2f0a)\n    // Modern dApp browsers...\n    if (window.ethereum) {\n      web3Provider = window.ethereum;\n      try {\n        // Request account access\n        await window.ethereum.enable();\n      } catch (error) {\n        // User denied account access...\n        this.logError(\"Please allow access to your Web3 wallet.\");\n        return;\n      }\n    }\n    // Legacy dApp browsers...\n    else if (window.web3) {\n      web3Provider = window.web3.currentProvider;\n    }\n    // If no injected web3 instance is detected, fall back to Ganache\n    else {\n      this.logError(\"Please install MetaMask!\");\n      return;\n    }\n\n    const web3 = new Web3(web3Provider);\n\n    const networkID = await web3.eth.net.getId();\n    if (networkID !== 42) {\n      this.logError(\"Please set your network to Kovan.\");\n      return;\n    }\n\n    this.setState({ web3 }, () => {\n\n      // Update balances immediately and every 10 seconds\n      this.updateBalance();\n      setInterval(() => {\n        this.updateBalance();\n      }, 10 * 1000);\n    });\n  }\n\n  render = () => {\n    const { balance, message, error } = this.state;\n    return (\n      <div className=\"App\">\n        <p>Balance: {balance} BTC</p>\n        <p><button onClick={() => this.deposit().catch(this.logError)}>Deposit 0.003 BTC</button></p>\n        <p><button onClick={() => this.withdraw().catch(this.logError)}>Withdraw {balance} BTC</button></p>\n        <p>{message}</p>\n        {error ? <p style={{ color: \"red\" }}>{error}</p> : null}\n      </div>\n    );\n  }\n\n  updateBalance = async () => {\n    const { web3 } = this.state;\n    const contract = new web3.eth.Contract(ABI, contractAddress);\n    const balance = await contract.methods.balance().call();\n    this.setState({ balance: parseInt(balance.toString()) / 10 ** 8 });\n  }\n\n  logError = (error) => {\n    console.error(error);\n    this.setState({ error: String((error || {}).message || error) });\n  }\n\n  log = (message) => {\n    this.setState({ message });\n  }\n\n  deposit = async () => {\n    this.logError(\"\"); // Reset error\n\n    const { web3, renJS } = this.state;\n\n    const amount = 0.003; // BTC\n    const mint = await renJS.lockAndMint({\n        // Send BTC from the Bitcoin blockchain to the Ethereum blockchain.\n        asset: \"BTC\",\n        from: Bitcoin(),\n        to: Ethereum(web3.currentProvider).Contract({\n            // The contract we want to interact with\n            sendTo: contractAddress,\n        \n            // The name of the function we want to call\n            contractFn: \"deposit\",\n        \n            // Arguments expected for calling `deposit`\n            contractParams: [\n                {\n                    name: \"_msg\",\n                    type: \"bytes\",\n                    value: Buffer.from(`Depositing ${amount} BTC`),\n                }\n            ],\n        }),\n    });\n    \n    // Show the gateway address to the user so that they can transfer their BTC to it.\n    this.log(`Deposit ${amount} BTC to ${mint.gatewayAddress}`);\n    \n    mint.on(\"deposit\", async (deposit) => {\n        // Details of the deposit are available from `deposit.depositDetails`.\n\n        const hash = deposit.txHash();\n        const depositLog = (msg) => this.log(`[${hash.slice(0, 8)}][${deposit.status}] ${msg}`);\n  \n        await deposit.confirmed()\n          .on(\"target\", (confs, target) => depositLog(`${confs}/${target} confirmations`))\n          .on(\"confirmation\", (confs, target) => depositLog(`${confs}/${target} confirmations`));\n  \n        await deposit.signed()\n          // Print RenVM status - \"pending\", \"confirming\" or \"done\".\n          .on(\"status\", (status) => depositLog(`Status: ${status}`));\n  \n        await deposit.mint()\n          // Print Ethereum transaction hash.\n          .on(\"transactionHash\", (txHash) => depositLog(`Mint tx: ${txHash}`));\n    });\n    \n    this.log(`Deposited ${amount} BTC.`);\n  }\n\n  withdraw = async () => {\n    this.logError(\"\"); // Reset error\n\n    const { web3, renJS, balance } = this.state;\n\n    const recipient = prompt(\"Enter BTC recipient:\");\n    const amount = balance;\n    const burnAndRelease = await renJS.burnAndRelease({\n        // Send BTC from Ethereum back to the Bitcoin blockchain.\n        asset: \"BTC\",\n        to: Bitcoin().Address(recipient),\n        from: Ethereum(web3.currentProvider).Contract((btcAddress) => ({\n            sendTo: contractAddress,\n            \n            contractFn: \"withdraw\",\n            \n            contractParams: [\n                {\n                    type: \"bytes\",\n                    name: \"_msg\",\n                    value: Buffer.from(`Withdrawing ${amount} BTC`),\n                },\n                {\n                    type: \"bytes\",\n                    name: \"_to\",\n                    value: Buffer.from(btcAddress),\n                },\n                {\n                    type: \"uint256\",\n                    name: \"_amount\",\n                    value: RenJS.utils.toSmallestUnit(amount, 8),\n                },\n            ],\n        })),\n    });\n    \n    let confirmations = 0;\n    await burnAndRelease\n        .burn()\n        // Ethereum transaction confirmations.\n        .on(\"confirmation\", (confs) => {\n            confirmations = confs;\n        })\n        // Print Ethereum transaction hash.\n        .on(\"transactionHash\", (txHash) =>\n            this.log(`txHash: ${String(txHash)}`),\n        );\n    \n    await burnAndRelease\n        .release()\n        // Print RenVM status - \"pending\", \"confirming\" or \"done\".\n        .on(\"status\", (status) =>\n            status === \"confirming\"\n                ? this.log(`${status} (${confirmations}/15)`)\n                : this.log(status),\n        )\n        // Print RenVM transaction hash\n        .on(\"txHash\", this.log);\n    \n    this.log(`Withdrew ${amount} BTC to ${recipient}.`);\n  }\n}\n\nexport {\n  App,\n  Dapp,\n}"]},"metadata":{},"sourceType":"module"}