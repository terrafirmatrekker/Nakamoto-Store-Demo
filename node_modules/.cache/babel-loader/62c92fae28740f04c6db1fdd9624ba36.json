{"ast":null,"code":"import _objectSpread from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tejas/Desktop/marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Callable } from \"@renproject/utils\";\nimport axios from \"axios\";\nimport { sortUTXOs, DEFAULT_TIMEOUT } from \"./API\";\nexport var BlockchairNetwork;\n\n(function (BlockchairNetwork) {\n  BlockchairNetwork[\"BITCOIN\"] = \"bitcoin\";\n  BlockchairNetwork[\"BITCOIN_CASH\"] = \"bitcoin-cash\";\n  BlockchairNetwork[\"LITECOIN\"] = \"litecoin\";\n  BlockchairNetwork[\"BITCOIN_SV\"] = \"bitcoin-sv\";\n  BlockchairNetwork[\"DOGECOIN\"] = \"dogecoin\";\n  BlockchairNetwork[\"DASH\"] = \"dash\";\n  BlockchairNetwork[\"GROESTLCOIN\"] = \"groestlcoin\";\n  BlockchairNetwork[\"BITCOIN_TESTNET\"] = \"bitcoin/testnet\";\n})(BlockchairNetwork || (BlockchairNetwork = {}));\n\nexport var BlockchairClass = function BlockchairClass() {\n  var _this = this;\n\n  var network = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BlockchairNetwork.BITCOIN;\n\n  _classCallCheck(this, BlockchairClass);\n\n  this.endpoint = function () {\n    return \"https://api.blockchair.com/\".concat(_this.network);\n  };\n\n  this.fetchUTXO =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(txHash, vOut) {\n      var url, response, tx, latestBlock, statsUrl, statsResponse, confirmations;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(_this.endpoint(), \"/dashboards/transaction/\").concat(txHash);\n              _context.next = 3;\n              return axios.get(\"\".concat(url), {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 3:\n              response = _context.sent.data;\n\n              if (response.data[txHash]) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error(\"Transaction not found.\");\n\n            case 6:\n              tx = response.data[txHash];\n              latestBlock = response.context.state;\n\n              if (!(latestBlock === 0)) {\n                _context.next = 14;\n                break;\n              }\n\n              statsUrl = \"\".concat(_this.endpoint(), \"/stats\");\n              _context.next = 12;\n              return axios.get(statsUrl, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 12:\n              statsResponse = _context.sent.data;\n              latestBlock = statsResponse.data.blocks - 1;\n\n            case 14:\n              confirmations = tx.transaction.block_id === -1 ? 0 : Math.max(latestBlock - tx.transaction.block_id + 1, 0);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                vOut: vOut,\n                amount: tx.outputs[vOut].value.toString(),\n                confirmations: confirmations\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.fetchUTXOs =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(address) {\n      var confirmations,\n          url,\n          response,\n          latestBlock,\n          statsUrl,\n          statsResponse,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              confirmations = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 0;\n              url = \"\".concat(_this.endpoint(), \"/dashboards/address/\").concat(address, \"?limit=0,100\");\n              _context2.next = 4;\n              return axios.get(url, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 4:\n              response = _context2.sent.data;\n              latestBlock = response.context.state;\n\n              if (!(latestBlock === 0)) {\n                _context2.next = 12;\n                break;\n              }\n\n              statsUrl = \"\".concat(_this.endpoint(), \"/stats\");\n              _context2.next = 10;\n              return axios.get(statsUrl, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 10:\n              statsResponse = _context2.sent.data;\n              latestBlock = statsResponse.data.blocks - 1;\n\n            case 12:\n              return _context2.abrupt(\"return\", response.data[address].utxo.map(function (utxo) {\n                return {\n                  txHash: utxo.transaction_hash,\n                  amount: utxo.value.toString(),\n                  vOut: utxo.index,\n                  confirmations: utxo.block_id === -1 ? 0 : latestBlock - utxo.block_id + 1\n                };\n              }).filter(function (utxo) {\n                return confirmations === 0 || utxo.confirmations >= confirmations;\n              }).sort(sortUTXOs));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.fetchTXs =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(address) {\n      var confirmations,\n          limit,\n          url,\n          response,\n          latestBlock,\n          statsUrl,\n          statsResponse,\n          txHashes,\n          txDetails,\n          i,\n          txUrl,\n          txResponse,\n          received,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          txHash,\n          tx,\n          txConfirmations,\n          _i,\n          output,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              confirmations = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 0;\n              limit = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 25;\n              url = \"\".concat(_this.endpoint(), \"/dashboards/address/\").concat(address, \"?limit=\").concat(limit, \",0\");\n              _context3.next = 5;\n              return axios.get(url, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 5:\n              response = _context3.sent.data;\n              latestBlock = response.context.state;\n\n              if (!(latestBlock === 0)) {\n                _context3.next = 13;\n                break;\n              }\n\n              statsUrl = \"\".concat(_this.endpoint(), \"/stats\");\n              _context3.next = 11;\n              return axios.get(statsUrl, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 11:\n              statsResponse = _context3.sent.data;\n              latestBlock = statsResponse.data.blocks - 1;\n\n            case 13:\n              txHashes = response.data[address].transactions;\n              txDetails = {}; // Fetch in sets of 10\n\n              i = 0;\n\n            case 16:\n              if (!(i < Math.ceil(txHashes.length / 10))) {\n                _context3.next = 25;\n                break;\n              }\n\n              txUrl = \"\".concat(_this.endpoint(), \"/dashboards/transactions/\").concat(txHashes.slice(i * 10, (i + 1) * 10).join(\",\"));\n              _context3.next = 20;\n              return axios.get(txUrl, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 20:\n              txResponse = _context3.sent.data;\n              txDetails = _objectSpread({}, txDetails, txResponse.data);\n\n            case 22:\n              i++;\n              _context3.next = 16;\n              break;\n\n            case 25:\n              received = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context3.prev = 29;\n\n              for (_iterator = txHashes[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                txHash = _step.value;\n                tx = txDetails[txHash];\n                txConfirmations = tx.transaction.block_id === -1 ? 0 : Math.max(latestBlock - tx.transaction.block_id + 1, 0);\n\n                for (_i = 0; _i < tx.outputs.length; _i++) {\n                  output = tx.outputs[_i];\n\n                  if (output.recipient === address) {\n                    received.push({\n                      txHash: tx.transaction.hash,\n                      amount: output.value.toString(),\n                      vOut: _i,\n                      confirmations: txConfirmations\n                    });\n                  }\n                }\n              }\n\n              _context3.next = 37;\n              break;\n\n            case 33:\n              _context3.prev = 33;\n              _context3.t0 = _context3[\"catch\"](29);\n              _didIteratorError = true;\n              _iteratorError = _context3.t0;\n\n            case 37:\n              _context3.prev = 37;\n              _context3.prev = 38;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 40:\n              _context3.prev = 40;\n\n              if (!_didIteratorError) {\n                _context3.next = 43;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 43:\n              return _context3.finish(40);\n\n            case 44:\n              return _context3.finish(37);\n\n            case 45:\n              return _context3.abrupt(\"return\", received.filter(function (utxo) {\n                return confirmations === 0 || utxo.confirmations >= confirmations;\n              }).sort(sortUTXOs));\n\n            case 46:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[29, 33, 37, 45], [38,, 40, 44]]);\n    }));\n\n    return function (_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.broadcastTransaction =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(txHex) {\n      var url, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              url = \"\".concat(_this.endpoint(), \"/push/transaction\");\n              _context4.next = 3;\n              return axios.post(url, {\n                data: txHex\n              }, {\n                timeout: DEFAULT_TIMEOUT\n              });\n\n            case 3:\n              response = _context4.sent;\n\n              if (!response.data.error) {\n                _context4.next = 6;\n                break;\n              }\n\n              throw new Error(response.data.error);\n\n            case 6:\n              return _context4.abrupt(\"return\", response.data.data.transaction_hash);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.network = network;\n};\nexport var Blockchair = Callable(BlockchairClass);","map":null,"metadata":{},"sourceType":"module"}