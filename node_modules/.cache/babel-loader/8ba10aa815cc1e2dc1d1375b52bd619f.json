{"ast":null,"code":"import _classCallCheck from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tejas/Desktop/marketplace2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tejas/Desktop/marketplace2/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Bridge from \"./Bridge\";\nimport Header from \"./Header\";\nimport Shop from \"./Shop\";\nimport Home from \"./Home\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/shop\",\n        component: Shop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/bridge\",\n        component: Bridge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// //Need to correct RenJS tutorial BTC/ETH imports with newest NPM file hyphen\n// import RenJS from \"@renproject/ren\";\n// import { Bitcoin } from \"@renproject/chains-bitcoin\";\n// import { Ethereum } from \"@renproject/chains-ethereum\";\n// import { ethers } from \"ethers\";\n// import logo from \"../logo.png\";\n// import \"./App.css\";\n// import Marketplace from \"../abis/Marketplace.json\";\n// // import ABI from \"../abis/ABI.json\";\n// import Navbar from \"./Navbar\";\n// import Main from \"./Main\";\n// // class dapp extends React.Component {\n// //   render() {\n// //     return  (\n// //       <div className=\"bridge\">test\n// //       <Renapp /></div>\n// //     )\n// //   }\n// // }\n// class Store extends Component {\n//   async componentWillMount() {\n//     await this.loadWeb3();\n//     await this.loadBlockchainData();\n//   }\n//   async loadWeb3() {\n//     if (window.ethereum) {\n//       window.web3 = new Web3(window.ethereum);\n//       await window.ethereum.enable();\n//     } else if (window.web3) {\n//       window.web3 = new Web3(window.web3.currentProvider);\n//     } else {\n//       window.alert(\n//         \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n//       );\n//     }\n//   }\n//   async loadBlockchainData() {\n//     const web3 = window.web3;\n//     // Load account\n//     const accounts = await web3.eth.getAccounts();\n//     this.setState({ account: accounts[0] });\n//     const networkId = await web3.eth.net.getId();\n//     const networkData = Marketplace.networks[networkId];\n//     if (networkData) {\n//       const marketplace = web3.eth.Contract(\n//         Marketplace.abi,\n//         networkData.address\n//       );\n//       this.setState({ marketplace });\n//       const productCount = await marketplace.methods.productCount().call();\n//       this.setState({ productCount });\n//       // Load products\n//       for (var i = 1; i <= productCount; i++) {\n//         const product = await marketplace.methods.products(i).call();\n//         this.setState({\n//           products: [...this.state.products, product],\n//         });\n//       }\n//       this.setState({ loading: false });\n//     } else {\n//       window.alert(\"Marketplace contract not deployed to detected network.\");\n//     }\n//   }\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       productCount: 0,\n//       products: [],\n//       loading: true,\n//     };\n//     this.createProduct = this.createProduct.bind(this);\n//     this.purchaseProduct = this.purchaseProduct.bind(this);\n//   }\n//   createProduct(name, price) {\n//     this.setState({ loading: true });\n//     this.state.marketplace.methods\n//       .createProduct(name, price)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n//   purchaseProduct(id, price) {\n//     this.setState({ loading: true });\n//     this.state.marketplace.methods\n//       .purchaseProduct(id)\n//       .send({ from: this.state.account, value: price })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Navbar account={this.state.account} />\n//         <div className=\"container mt-5\"> \n//           <div className=\"row\">\n//             <main role=\"main\" className=\"col-lg-12 d-flex\">\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <Main\n//                   products={this.state.products}\n//                   createProduct={this.createProduct}\n//                   purchaseProduct={this.purchaseProduct}\n//                 />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//     }\n//   }\n// export { Store }","map":{"version":3,"sources":["/Users/tejas/Desktop/marketplace2/src/components/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Bridge","Header","Shop","Home","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CADF;AAUD;;;;EAZeJ,S;;AAelB,eAAeQ,GAAfsourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Bridge from \"./Bridge\";\nimport Header from \"./Header\";\nimport Shop from \"./Shop\";\nimport Home from \"./Home\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <Header />\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route path=\"/shop\" component={Shop}></Route>\n          <Route path=\"/bridge\" component={Bridge}></Route>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// //Need to correct RenJS tutorial BTC/ETH imports with newest NPM file hyphen\n// import RenJS from \"@renproject/ren\";\n// import { Bitcoin } from \"@renproject/chains-bitcoin\";\n// import { Ethereum } from \"@renproject/chains-ethereum\";\n// import { ethers } from \"ethers\";\n// import logo from \"../logo.png\";\n// import \"./App.css\";\n// import Marketplace from \"../abis/Marketplace.json\";\n// // import ABI from \"../abis/ABI.json\";\n// import Navbar from \"./Navbar\";\n// import Main from \"./Main\";\n\n\n\n\n// // class dapp extends React.Component {\n// //   render() {\n// //     return  (\n// //       <div className=\"bridge\">test\n// //       <Renapp /></div>\n// //     )\n// //   }\n// // }\n\n// class Store extends Component {\n//   async componentWillMount() {\n//     await this.loadWeb3();\n//     await this.loadBlockchainData();\n//   }\n\n//   async loadWeb3() {\n//     if (window.ethereum) {\n//       window.web3 = new Web3(window.ethereum);\n//       await window.ethereum.enable();\n//     } else if (window.web3) {\n//       window.web3 = new Web3(window.web3.currentProvider);\n//     } else {\n//       window.alert(\n//         \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n//       );\n//     }\n//   }\n\n//   async loadBlockchainData() {\n//     const web3 = window.web3;\n//     // Load account\n//     const accounts = await web3.eth.getAccounts();\n//     this.setState({ account: accounts[0] });\n//     const networkId = await web3.eth.net.getId();\n//     const networkData = Marketplace.networks[networkId];\n//     if (networkData) {\n//       const marketplace = web3.eth.Contract(\n//         Marketplace.abi,\n//         networkData.address\n//       );\n//       this.setState({ marketplace });\n//       const productCount = await marketplace.methods.productCount().call();\n//       this.setState({ productCount });\n//       // Load products\n//       for (var i = 1; i <= productCount; i++) {\n//         const product = await marketplace.methods.products(i).call();\n//         this.setState({\n//           products: [...this.state.products, product],\n//         });\n//       }\n//       this.setState({ loading: false });\n//     } else {\n//       window.alert(\"Marketplace contract not deployed to detected network.\");\n//     }\n//   }\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       productCount: 0,\n//       products: [],\n//       loading: true,\n//     };\n\n//     this.createProduct = this.createProduct.bind(this);\n//     this.purchaseProduct = this.purchaseProduct.bind(this);\n//   }\n\n//   createProduct(name, price) {\n//     this.setState({ loading: true });\n//     this.state.marketplace.methods\n//       .createProduct(name, price)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   purchaseProduct(id, price) {\n//     this.setState({ loading: true });\n//     this.state.marketplace.methods\n//       .purchaseProduct(id)\n//       .send({ from: this.state.account, value: price })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Navbar account={this.state.account} />\n//         <div className=\"container mt-5\"> \n//           <div className=\"row\">\n//             <main role=\"main\" className=\"col-lg-12 d-flex\">\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <Main\n//                   products={this.state.products}\n//                   createProduct={this.createProduct}\n//                   purchaseProduct={this.purchaseProduct}\n//                 />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//     }\n//   }\n\n// export { Store }"]},"metadata":{},"sourceType":"module"}